2016-11-30 10:03:47  [ main:0 ] - [ INFO ]  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-11-30 10:03:47  [ main:73 ] - [ INFO ]  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2b2948e2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6ddf90b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@57536d79, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b0143d3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5a8e6209]
2016-11-30 10:03:47  [ main:675 ] - [ INFO ]  Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1d29cf23: startup date [Wed Nov 30 10:03:47 CST 2016]; root of context hierarchy
2016-11-30 10:03:53  [ main:6417 ] - [ INFO ]  Overriding bean definition for bean 'cacheManager': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/AppConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/ShiroConfig.class]]
2016-11-30 10:03:54  [ main:7757 ] - [ INFO ]  Bean 'shiroConfig' of type [class tiger.web.api.ShiroConfig$$EnhancerBySpringCGLIB$$30d35dfd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:55  [ main:7895 ] - [ INFO ]  HV000001: Hibernate Validator 5.1.3.Final
2016-11-30 10:03:55  [ main:8048 ] - [ INFO ]  Bean 'org.springframework.scheduling.annotation.SchedulingConfiguration' of type [class org.springframework.scheduling.annotation.SchedulingConfiguration$$EnhancerBySpringCGLIB$$719f6ffd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:56  [ main:9233 ] - [ WARN ]  diskStorePath '/var/folders/3n/qllk7qhn0sv4tsd4gsqjl8z40000gn/T/shiro-ehcache' is already used by an existing CacheManager either in the same VM or in a different process.
The diskStore path for this CacheManager will be set to /var/folders/3n/qllk7qhn0sv4tsd4gsqjl8z40000gn/T/shiro-ehcache/ehcache_auto_created3635170216273745911diskstore.
To avoid this warning consider using the CacheManager factory methods to create a singleton CacheManager or specifying a separate ehcache configuration (ehcache.xml) for each CacheManager instance.
2016-11-30 10:03:56  [ main:9351 ] - [ WARN ]  Data in persistent disk stores is ignored for stores from automatically created directories.
Remove diskPersistent or resolve the conflicting disk paths in cache configuration.
Deleting data file /var/folders/3n/qllk7qhn0sv4tsd4gsqjl8z40000gn/T/shiro-ehcache/ehcache_auto_created3635170216273745911diskstore/shiro-active%0053ession%0043ache.data
2016-11-30 10:03:56  [ main:9354 ] - [ INFO ]  Bean 'cacheManager' of type [class org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:56  [ main:9358 ] - [ INFO ]  Cache with name 'tiger.web.api.ShiroRealm.authorizationCache' does not yet exist.  Creating now.
2016-11-30 10:03:56  [ main:9368 ] - [ INFO ]  Added EhCache named [tiger.web.api.ShiroRealm.authorizationCache]
2016-11-30 10:03:56  [ main:9393 ] - [ INFO ]  Bean 'myRealm' of type [class tiger.web.api.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:56  [ main:9421 ] - [ INFO ]  Bean 'securityManager' of type [class org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:56  [ main:9456 ] - [ INFO ]  Bean 'dataConfig' of type [class tiger.common.dal.DataConfig$$EnhancerBySpringCGLIB$$576a7a86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:56  [ main:9552 ] - [ INFO ]  MLog clients using log4j logging.
2016-11-30 10:03:56  [ main:9713 ] - [ INFO ]  Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2016-11-30 10:03:57  [ main:9812 ] - [ INFO ]  Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:57  [ main:10502 ] - [ INFO ]  Bean 'sqlSessionFactory' of type [class org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:10888 ] - [ INFO ]  Bean 'workspaceVerifyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11000 ] - [ INFO ]  Bean 'workspaceMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11067 ] - [ INFO ]  Bean 'ucenterPostReplyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11154 ] - [ INFO ]  Bean 'ucenterPostMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11211 ] - [ INFO ]  Bean 'ucenterHelpMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11253 ] - [ INFO ]  Bean 'ucenterHelpCatalogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11286 ] - [ INFO ]  Bean 'tagMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11348 ] - [ INFO ]  Bean 'systemParamsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11471 ] - [ INFO ]  Bean 'statisticsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11543 ] - [ INFO ]  Bean 'staffMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11637 ] - [ INFO ]  Bean 'smsVerifyCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:58  [ main:11724 ] - [ INFO ]  Bean 'roleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:11791 ] - [ INFO ]  Bean 'regionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:11860 ] - [ INFO ]  Bean 'portalUIMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:11895 ] - [ INFO ]  Bean 'permissionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:11950 ] - [ INFO ]  Bean 'paymentRefundMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12009 ] - [ INFO ]  Bean 'paymentOrderObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12063 ] - [ INFO ]  Bean 'paymentOrderMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12111 ] - [ INFO ]  Bean 'paymentObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12172 ] - [ INFO ]  Bean 'msgTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12231 ] - [ INFO ]  Bean 'msgTplCatgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12318 ] - [ INFO ]  Bean 'messageMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12368 ] - [ INFO ]  Bean 'marketProjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12418 ] - [ INFO ]  Bean 'loanTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12466 ] - [ INFO ]  Bean 'loanSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12494 ] - [ INFO ]  Bean 'loanRefineMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12554 ] - [ INFO ]  Bean 'loanRecordMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12590 ] - [ INFO ]  Bean 'loanRecordItemsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12625 ] - [ INFO ]  Bean 'loanPawnParamMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:03:59  [ main:12725 ] - [ INFO ]  Bean 'loanPawnMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:12811 ] - [ INFO ]  Bean 'loanMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:12838 ] - [ INFO ]  Bean 'loanFeeItemsDOMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:12860 ] - [ INFO ]  Bean 'loanFeeDOMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:12905 ] - [ INFO ]  Bean 'loanCustomerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:12945 ] - [ INFO ]  Bean 'invitationCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:12987 ] - [ INFO ]  Bean 'feedbackMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13028 ] - [ INFO ]  Bean 'customerMsgScheduleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13059 ] - [ INFO ]  Bean 'customerMsgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13095 ] - [ INFO ]  Bean 'customerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13125 ] - [ INFO ]  Bean 'companyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13161 ] - [ INFO ]  Bean 'attachRelateMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13190 ] - [ INFO ]  Bean 'attachMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13221 ] - [ INFO ]  Bean 'activityMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13261 ] - [ INFO ]  Bean 'accountSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13305 ] - [ INFO ]  Bean 'accountMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13337 ] - [ INFO ]  Bean 'accountLoginLogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13366 ] - [ INFO ]  Bean 'accountBindMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:00  [ main:13602 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$149ece2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:01  [ main:14131 ] - [ INFO ]  Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:01  [ main:14222 ] - [ INFO ]  Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:01  [ main:14234 ] - [ INFO ]  Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-30 10:04:02  [ main:15448 ] - [ INFO ]  Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1ic9k1dnq0461r7im1h|766a49c7, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1ic9k1dnq0461r7im1h|766a49c7, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://139.196.30.98:3306/tiger?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 28800, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2016-11-30 10:04:03  [ main:16658 ] - [ INFO ]  Building JPA container EntityManagerFactory for persistence unit 'default'
2016-11-30 10:04:03  [ main:16700 ] - [ INFO ]  HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2016-11-30 10:04:04  [ main:16870 ] - [ INFO ]  HHH000412: Hibernate Core {4.3.8.Final}
2016-11-30 10:04:04  [ main:16877 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-11-30 10:04:04  [ main:16880 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-11-30 10:04:04  [ main:17234 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2016-11-30 10:04:04  [ main:17375 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2016-11-30 10:04:04  [ main:17392 ] - [ INFO ]  HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-11-30 10:04:04  [ main:17466 ] - [ INFO ]  HHH000397: Using ASTQueryTranslatorFactory
2016-11-30 10:04:12  [ main:25148 ] - [ INFO ]  ProducerConfig values: 
	compression.type = none
	metric.reporters = []
	metadata.max.age.ms = 300000
	metadata.fetch.timeout.ms = 60000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [localhost:9092]
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	max.block.ms = 60000
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	ssl.truststore.password = null
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	client.id = 
	ssl.endpoint.identification.algorithm = null
	ssl.protocol = TLS
	request.timeout.ms = 30000
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	acks = all
	batch.size = 16384
	ssl.keystore.location = null
	receive.buffer.bytes = 32768
	ssl.cipher.suites = null
	ssl.truststore.type = JKS
	security.protocol = PLAINTEXT
	retries = 0
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.truststore.location = null
	ssl.keystore.password = null
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	send.buffer.bytes = 131072
	linger.ms = 1

2016-11-30 10:04:12  [ main:25222 ] - [ INFO ]  Kafka version : 0.9.0.0
2016-11-30 10:04:12  [ main:25222 ] - [ INFO ]  Kafka commitId : fc7243c2af4b2b4a
2016-11-30 10:04:17  [ main:30753 ] - [ INFO ]  No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.
2016-11-30 10:04:19  [ main:32052 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.login(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-30 10:04:19  [ main:32052 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.AccountController.logout(java.lang.String)
2016-11-30 10:04:19  [ main:32052 ] - [ INFO ]  Mapped "{[/account/profile],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getUserProfile()
2016-11-30 10:04:19  [ main:32052 ] - [ INFO ]  Mapped "{[/account/icon/{attachId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.attachHeaderIcon(java.lang.Long)
2016-11-30 10:04:19  [ main:32052 ] - [ INFO ]  Mapped "{[/account/profile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.updateUserProfile(tiger.web.api.form.user.AccountUpdateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[GET],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForResetPass(java.lang.String)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.verifyMsgCode(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/password],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.resetPassword(tiger.web.api.form.user.ResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/password],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changePassword(tiger.web.api.form.user.SimpleResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/sms],methods=[GET],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForRegister(java.lang.String)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/sms],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.authMsgCodeForRegister(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.signUp(tiger.web.api.form.user.AccountAddForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isMobileExist(java.lang.String)
2016-11-30 10:04:19  [ main:32053 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[scope=profile],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.readByMobile(java.lang.String)
2016-11-30 10:04:19  [ main:32054 ] - [ INFO ]  Mapped "{[/account/mobile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changeMobile(tiger.web.api.form.user.MobileChangeForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32054 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isValidToken(java.lang.String,java.lang.String)
2016-11-30 10:04:19  [ main:32054 ] - [ INFO ]  Mapped "{[/account/profile/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.updateAccountSetting(tiger.web.api.form.user.AccountLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32054 ] - [ INFO ]  Mapped "{[/account/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getAccountProfileById(java.lang.Long)
2016-11-30 10:04:19  [ main:32054 ] - [ INFO ]  Mapped "{[/account/profile/region],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.account.AccountController.getAccountRegion(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32056 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.listDomain.AccountSettingListDomain>> tiger.web.api.controller.account.AccountSettingController.getNotificationSetting()
2016-11-30 10:04:19  [ main:32057 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountSettingController.updateNotificationSetting(tiger.web.api.form.user.NotificationPushUpdateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32058 ] - [ INFO ]  Mapped "{[/account/company],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.getUserCompany()
2016-11-30 10:04:19  [ main:32059 ] - [ INFO ]  Mapped "{[/account/company],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.updateUserCompany(tiger.web.api.form.company.CompanyForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32059 ] - [ INFO ]  Mapped "{[/test-redis],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.RedisTestController.read(java.lang.Long)
2016-11-30 10:04:19  [ main:32061 ] - [ INFO ]  Mapped "{[/social/url],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.String> tiger.web.api.controller.account.SocialAccountController.getRedirectUrl(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32062 ] - [ INFO ]  Mapped "{[/social/bind],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.bindSocial(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32062 ] - [ INFO ]  Mapped "{[/social/binds],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountBindDomain>> tiger.web.api.controller.account.SocialAccountController.binds()
2016-11-30 10:04:19  [ main:32062 ] - [ INFO ]  Mapped "{[/social/bind/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.deBind(java.lang.Long)
2016-11-30 10:04:19  [ main:32062 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountSocialAuthDomain> tiger.web.api.controller.account.SocialAccountController.thirdPartAuth(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-30 10:04:19  [ main:32062 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.SocialAccountController.bindThirdPartAccount(tiger.web.api.form.user.SocialBindForm,org.springframework.validation.BindingResult,int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-30 10:04:19  [ main:32063 ] - [ INFO ]  Mapped "{[/activity/activities],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.ActivityDomain>> tiger.web.api.controller.activity.ActivityController.allActivities(tiger.common.dal.query.ActivityQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32064 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=detail],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalListDetail(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32064 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=summary],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalSummaryListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalList(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32064 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=statistics],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.StatisticsDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalLStatistics(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32065 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getAttachById(long)
2016-11-30 10:04:19  [ main:32065 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[action=preview],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getPreviewAttachById(long,java.lang.String)
2016-11-30 10:04:19  [ main:32065 ] - [ INFO ]  Mapped "{[/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.createAttach(tiger.web.api.form.attach.AttachForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32065 ] - [ INFO ]  Mapped "{[/qiniuattach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object tiger.web.api.controller.attach.QiniuAttachController.qiniuCallBack(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,tiger.web.api.form.attach.QiniuAttachForm)
2016-11-30 10:04:19  [ main:32066 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.attach.QiniuAttachController.deleteAttachById(long)
2016-11-30 10:04:19  [ main:32066 ] - [ INFO ]  Mapped "{[/system/dict/{dictType}],methods=[GET],params=[scope=loan],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.DictController.getLoanDict(java.lang.String)
2016-11-30 10:04:19  [ main:32067 ] - [ INFO ]  Mapped "{[/social_auth],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.web.servlet.ModelAndView tiger.web.api.controller.base.IndexController.socialAuthRedirectUrl(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-30 10:04:19  [ main:32067 ] - [ INFO ]  Mapped "{[/system/dateTime],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Long> tiger.web.api.controller.base.SystemController.getSystemDateTime()
2016-11-30 10:04:19  [ main:32070 ] - [ INFO ]  Mapped "{[/system/systemparams],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.String>> tiger.web.api.controller.base.SystemController.getSystemParams(java.lang.String)
2016-11-30 10:04:19  [ main:32070 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.getCaptcha(javax.servlet.http.HttpServletResponse)
2016-11-30 10:04:19  [ main:32071 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.base.SystemController.verifyCaptcha(java.lang.String,java.lang.String)
2016-11-30 10:04:19  [ main:32071 ] - [ INFO ]  Mapped "{[/system/exception],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.collectException(tiger.web.api.form.system.ExceptionForm)
2016-11-30 10:04:19  [ main:32077 ] - [ INFO ]  Mapped "{[/customer],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.createCustomer(tiger.web.api.form.customer.CustomerCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32077 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.readCustomer(java.lang.Long)
2016-11-30 10:04:19  [ main:32077 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomer(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32077 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteCustomer(java.lang.Long)
2016-11-30 10:04:19  [ main:32079 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.listCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32079 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.listAllCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32080 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomer(java.lang.String,java.lang.Long)
2016-11-30 10:04:19  [ main:32080 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all && key=name],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomerByName(java.lang.String,java.lang.Long)
2016-11-30 10:04:19  [ main:32080 ] - [ INFO ]  Mapped "{[/customer/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.addAttach(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32080 ] - [ INFO ]  Mapped "{[/customer/{id}/attachs],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.customer.CustomerController.getAllAttachs(java.lang.Long)
2016-11-30 10:04:19  [ main:32081 ] - [ INFO ]  Mapped "{[/customer/{id}/attach/{aid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteAttach(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32082 ] - [ INFO ]  Mapped "{[/customer/{id}/loans],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.customer.CustomerController.listLoan(java.lang.Long,tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32082 ] - [ INFO ]  Mapped "{[/customer/{id}/smses],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.customer.CustomerController.listSmses(java.lang.Long,tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32082 ] - [ INFO ]  Mapped "{[/customer/{id}/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.listTags(java.lang.Long)
2016-11-30 10:04:19  [ main:32082 ] - [ INFO ]  Mapped "{[/customers/tag/{tid}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.addTags(java.lang.Long,tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32082 ] - [ INFO ]  Mapped "{[/customer/{id}/tag/{tid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.delTag(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32082 ] - [ INFO ]  Mapped "{[/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.getAllTags()
2016-11-30 10:04:19  [ main:32083 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getBirthdayCustomerCount()
2016-11-30 10:04:19  [ main:32083 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.util.List<tiger.core.domain.CustomerDomain>>> tiger.web.api.controller.customer.CustomerController.listBirthdayCustomers()
2016-11-30 10:04:19  [ main:32084 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getCustomerCount()
2016-11-30 10:04:19  [ main:32084 ] - [ INFO ]  Mapped "{[/customers],methods=[PUT],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.deleteCustomers(tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32084 ] - [ INFO ]  Mapped "{[/customer/{id}/icon/{iconId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomerIcon(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32084 ] - [ INFO ]  Mapped "{[/customer/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.assignCustomerById(java.lang.Long,tiger.web.api.form.customer.CustomerAssignmentForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32085 ] - [ INFO ]  Mapped "{[/customers/recentPayBackCustomers],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.getRecentPayBackCustoemrs(tiger.common.dal.query.RecentPayBackCustomerQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32085 ] - [ INFO ]  Mapped "{[/feedback],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.FeedbackDomain> tiger.web.api.controller.feedback.FeedbackController.createFeedback(tiger.web.api.form.feedback.FeedbackCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32088 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[operation=createWithAll],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.create(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32088 ] - [ INFO ]  Mapped "{[/loan/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.payItems(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32088 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[operation=manualCreate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.manualCreate(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32088 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.createLoan(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32088 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=trash],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.trashLoan(java.lang.Long)
2016-11-30 10:04:19  [ main:32089 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[PUT],params=[operation=recover],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.recoverLoan(java.lang.Long)
2016-11-30 10:04:19  [ main:32089 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoan(java.lang.Long)
2016-11-30 10:04:19  [ main:32089 ] - [ INFO ]  Mapped "{[/loan/{id}/customer/{customerId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.loan.LoanController.relateLoaner(java.lang.Long,java.lang.Long,java.lang.String)
2016-11-30 10:04:19  [ main:32089 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn/{pawnId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relatePawn(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32089 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.getLoanById(java.lang.Long)
2016-11-30 10:04:19  [ main:32092 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanController.getLoanPawnById(java.lang.Long)
2016-11-30 10:04:19  [ main:32093 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<tiger.common.dal.enums.LoanCustomerTypeEnum, tiger.core.domain.CustomerDomain>> tiger.web.api.controller.loan.LoanController.getLoanLoanerById(java.lang.Long)
2016-11-30 10:04:19  [ main:32094 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.updateLoanLoanerById(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm)
2016-11-30 10:04:19  [ main:32094 ] - [ INFO ]  Mapped "{[/loan/{id}/records],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRefineDomain>> tiger.web.api.controller.loan.LoanController.getLoanRecordsById(java.lang.Long)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loan/{id}/modifiedRecords],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.getModifiedLoanRecords(java.lang.Long)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.loan.LoanController.queryLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanController.countLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loan/{id}/attaches],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.loan.LoanController.listLoanAttachments(java.lang.Long)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relateLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loan/{id}/paymentSituation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.loan.LoanController.getLoanPaymentSituationById(java.lang.Long)
2016-11-30 10:04:19  [ main:32095 ] - [ INFO ]  Mapped "{[/loan/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.assignLoanById(java.lang.Long,tiger.web.api.form.loan.LoanAssignmentForm)
2016-11-30 10:04:19  [ main:32097 ] - [ INFO ]  Mapped "{[/loan/{id}/sms],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.loan.LoanNotificationController.getHistorySms(java.lang.Long)
2016-11-30 10:04:19  [ main:32097 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.getSmsSetting(java.lang.Long)
2016-11-30 10:04:19  [ main:32098 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.settingSms(java.lang.Long,tiger.web.api.form.loan.LoanSmsSettingForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32100 ] - [ INFO ]  Mapped "{[/loan/pawn],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.createLoanPawn(tiger.web.api.form.loan.LoanPawnCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32101 ] - [ INFO ]  Mapped "{[/loan/pawn/{pawnId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.readByPawnId(long)
2016-11-30 10:04:19  [ main:32101 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.updateLoanPawn(long,tiger.web.api.form.loan.LoanPawnUpdateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32102 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.addAttachToLoanPawn(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32102 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.deleteAttachFromLoanPawn(long,long)
2016-11-30 10:04:19  [ main:32104 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getAllPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32104 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getPagePayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32105 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanPayController.countPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32105 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanPayController.getLoanBill(long)
2016-11-30 10:04:19  [ main:32105 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[PUT],params=[operation=merge],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanMergedBillDomain> tiger.web.api.controller.loan.LoanPayController.getMergedBillByIds(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32105 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.payMergedBills(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32105 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[PUT],params=[operation=launch],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.launchLoan(long,long,java.util.Date)
2016-11-30 10:04:19  [ main:32106 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[GET],params=[operation=calculate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.trimLoanRecord(long,long,tiger.web.api.form.loan.LoanRecalForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32107 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.paySingleBill(long,long,tiger.web.api.form.loan.LoanSinglePayForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32107 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/cancellation],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.cancelLastPayback(long)
2016-11-30 10:04:19  [ main:32108 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.modifyLoanBill(tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult,java.lang.Long)
2016-11-30 10:04:19  [ main:32110 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayModifyController.deleteModification(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32111 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.updateModification(java.lang.Long,java.lang.Long,tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32113 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRefinementLimitDomain> tiger.web.api.controller.loan.LoanRefineController.getLoanRefinementLimit(long)
2016-11-30 10:04:19  [ main:32113 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanRefineController.refineLoan(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32115 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanRefineController.previewLoanRefinePayItems(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32127 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.getLoanTemplateById(long)
2016-11-30 10:04:19  [ main:32133 ] - [ INFO ]  Mapped "{[/loan/template],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.createLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32133 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.deleteLoanTemplate(long)
2016-11-30 10:04:19  [ main:32133 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.updateLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult,long)
2016-11-30 10:04:19  [ main:32133 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.loanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-30 10:04:19  [ main:32134 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.allLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-30 10:04:19  [ main:32134 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanTemplateController.countLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-30 10:04:19  [ main:32135 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.awesomeProject(java.lang.Long)
2016-11-30 10:04:19  [ main:32137 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.collectProject(java.lang.Long)
2016-11-30 10:04:19  [ main:32137 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.deAwesomeProject(java.lang.Long)
2016-11-30 10:04:19  [ main:32137 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.deCollectProject(java.lang.Long)
2016-11-30 10:04:19  [ main:32137 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/sharing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.market.MarketProjectActionController.shareProject()
2016-11-30 10:04:19  [ main:32138 ] - [ INFO ]  Mapped "{[/market/project],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.createMarketProject(tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32138 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectController.deleteProject(java.lang.Long)
2016-11-30 10:04:19  [ main:32140 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.updateProject(java.lang.Long,tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32141 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.getById(java.lang.Long,java.lang.Long)
2016-11-30 10:04:19  [ main:32141 ] - [ INFO ]  Mapped "{[/market/projects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.queryProjects(tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-30 10:04:19  [ main:32141 ] - [ INFO ]  Mapped "{[/market/projects/userCollection/{account}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getUserCollectedProjects(java.lang.Long,tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-30 10:04:19  [ main:32142 ] - [ INFO ]  Mapped "{[/market/topAccounts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getTopAccounts(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32142 ] - [ INFO ]  Mapped "{[/market/latestProjects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getLatestProjects(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32142 ] - [ INFO ]  Mapped "{[/market/regions],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listAllRegions(tiger.common.dal.query.RegionQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32143 ] - [ INFO ]  Mapped "{[/market/region/support],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listSupportedRegions()
2016-11-30 10:04:19  [ main:32143 ] - [ INFO ]  Mapped "{[/market/region/support/QRCode],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.market.RegionController.listSupportedRegionQRCodes(java.lang.String)
2016-11-30 10:04:19  [ main:32143 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.MessageDomain> tiger.web.api.controller.message.MessageController.getMessageById(java.lang.Long)
2016-11-30 10:04:19  [ main:32143 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatusById(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult,long)
2016-11-30 10:04:19  [ main:32143 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.deleteMessageById(java.lang.Long)
2016-11-30 10:04:19  [ main:32144 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.MessageDomain>> tiger.web.api.controller.message.MessageController.getPaginatedMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32144 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.message.MessageController.countObjectBaseResultMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32144 ] - [ INFO ]  Mapped "{[/messages],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatuses(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32144 ] - [ INFO ]  Mapped "{[/portal/ui],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.portal.PortalController.getPicture(java.lang.String)
2016-11-30 10:04:19  [ main:32145 ] - [ INFO ]  Mapped "{[/sms/verify],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendVerifyCode(tiger.web.api.form.sms.SmsVerifyForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32145 ] - [ INFO ]  Mapped "{[/sms],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.sms.SmsController.sendMsg(tiger.web.api.form.sms.SendSmsForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32145 ] - [ INFO ]  Mapped "{[/sms/templates],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getMsgTemplate()
2016-11-30 10:04:19  [ main:32147 ] - [ INFO ]  Mapped "{[/sms/history],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.sms.SmsController.showHistory(tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32147 ] - [ INFO ]  Mapped "{[/sms/history/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendAgain(long)
2016-11-30 10:04:19  [ main:32148 ] - [ INFO ]  Mapped "{[/sms/scheduler],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getallSheduler()
2016-11-30 10:04:19  [ main:32148 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.snedSheduler(java.lang.Long)
2016-11-30 10:04:19  [ main:32148 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.deleteSheduler(java.lang.Long)
2016-11-30 10:04:19  [ main:32150 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.allHelps(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32150 ] - [ INFO ]  Mapped "{[/ucenter/help],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.addHelp(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32150 ] - [ INFO ]  Mapped "{[/ucenter/commonHelps],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.commonHelps()
2016-11-30 10:04:19  [ main:32150 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.listHelps(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32151 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.getHelpById(long)
2016-11-30 10:04:19  [ main:32151 ] - [ INFO ]  Mapped "{[/ucenter/catalogs],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpCatalogDomain>> tiger.web.api.controller.ucenter.HelpController.allCatalogs()
2016-11-30 10:04:19  [ main:32151 ] - [ INFO ]  Mapped "{[/ucenter/catalog/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpCatalogDomain> tiger.web.api.controller.ucenter.HelpController.getCatalog(long)
2016-11-30 10:04:19  [ main:32151 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=help],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.searchHelp(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32153 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.updateHelpById(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult,long)
2016-11-30 10:04:19  [ main:32153 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.deleteHelpById(long)
2016-11-30 10:04:19  [ main:32153 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}/common],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.commonHelpById(long,javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32155 ] - [ INFO ]  Mapped "{[/ucenter/post],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.addPost(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32156 ] - [ INFO ]  Mapped "{[/ucenter/stickyPosts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.stickyPosts()
2016-11-30 10:04:19  [ main:32157 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.allPosts()
2016-11-30 10:04:19  [ main:32158 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.listPosts(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32158 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.getPostById(java.lang.Long,java.lang.String)
2016-11-30 10:04:19  [ main:32159 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updatePostById(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult,long)
2016-11-30 10:04:19  [ main:32161 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostById(long)
2016-11-30 10:04:19  [ main:32162 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/reply],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.addReply(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,long)
2016-11-30 10:04:19  [ main:32162 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.getAllReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-30 10:04:19  [ main:32165 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.listReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-30 10:04:19  [ main:32166 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.getPostReplyById(long)
2016-11-30 10:04:19  [ main:32166 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updateReplyById(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,long)
2016-11-30 10:04:19  [ main:32166 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostReplyById(long)
2016-11-30 10:04:19  [ main:32167 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=post],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.searchPost(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32167 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=reply],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.searchReply(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32167 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/stick],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.stickPostById(long,javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32170 ] - [ INFO ]  Mapped "{[/workspace],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.createGroupWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32170 ] - [ INFO ]  Mapped "{[/workspace],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32170 ] - [ INFO ]  Mapped "{[/workspace],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.deleteGroupWorkspace()
2016-11-30 10:04:19  [ main:32170 ] - [ INFO ]  Mapped "{[/workspace/transfer/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.transferGroupWorkspace(java.lang.Long)
2016-11-30 10:04:19  [ main:32170 ] - [ INFO ]  Mapped "{[/workspace/setting/loan],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspaceLoanSetting(tiger.web.api.form.workspace.WorkspaceLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32170 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.getWorkspace(java.lang.Long)
2016-11-30 10:04:19  [ main:32170 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.quitWorkspace(java.lang.Long)
2016-11-30 10:04:19  [ main:32171 ] - [ INFO ]  Mapped "{[/workspace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.checkCreateWorkspaceAbility()
2016-11-30 10:04:19  [ main:32171 ] - [ INFO ]  Mapped "{[/workspace/member/invitation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.generateInvitation()
2016-11-30 10:04:19  [ main:32172 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/joinByCode],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.workspace.WorkspaceMemberController.joinWorkspaceByInvitationCode(java.lang.String)
2016-11-30 10:04:19  [ main:32172 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getInvitationInfo(java.lang.String)
2016-11-30 10:04:19  [ main:32172 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceMemberDetailDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getWorkspaceMember(java.lang.Long)
2016-11-30 10:04:19  [ main:32172 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.addWorkspaceMember(java.lang.Long)
2016-11-30 10:04:19  [ main:32172 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.deleteWorkspaceMember(java.lang.Long)
2016-11-30 10:04:19  [ main:32172 ] - [ INFO ]  Mapped "{[/workspace/member/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.AccountWorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getUserAuthInWorkspace()
2016-11-30 10:04:19  [ main:32172 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}/role],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.updateWorkspaceRoles(java.lang.Long,tiger.web.api.form.workspace.WorkspaceRoleUpdateForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32174 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationsOfWorkspace()
2016-11-30 10:04:19  [ main:32174 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberVerifyDomain>> tiger.web.api.controller.workspace.WorkspaceMemberController.getVerificationsOfWorkspace(tiger.common.dal.query.WorkspaceVerifyQuery,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32174 ] - [ INFO ]  Mapped "{[/workspace/member/verification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationOfWorkspace(tiger.web.api.form.workspace.WorkspaceVerifyForm,org.springframework.validation.BindingResult)
2016-11-30 10:04:19  [ main:32175 ] - [ INFO ]  Mapped "{[/workspaces],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaces()
2016-11-30 10:04:19  [ main:32175 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberListDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceMembers()
2016-11-30 10:04:19  [ main:32175 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceSearchController.countWorkspaceMembers()
2016-11-30 10:04:19  [ main:32175 ] - [ INFO ]  Mapped "{[/workspace/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.common.dal.enums.RoleEnum>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceRoles()
2016-11-30 10:04:19  [ main:32185 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:19  [ main:32185 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[text/html],custom=[]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest)
2016-11-30 10:04:20  [ main:32779 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2016-11-30 10:04:20  [ main:33624 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@1d29cf23: startup date [Wed Nov 30 10:03:47 CST 2016]; root of context hierarchy
2016-11-30 10:04:22  [ main:35134 ] - [ INFO ]  Initializing EhCache CacheManager
2016-11-30 10:04:28  [ main:41566 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2016-11-30 10:04:28  [ main:41568 ] - [ INFO ]  Mapped "{[/env],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41569 ] - [ INFO ]  Mapped "{[/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41569 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2016-11-30 10:04:28  [ main:41569 ] - [ INFO ]  Mapped "{[/metrics],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41569 ] - [ INFO ]  Mapped "{[/shutdown],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2016-11-30 10:04:28  [ main:41570 ] - [ INFO ]  Mapped "{[/health],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2016-11-30 10:04:28  [ main:41570 ] - [ INFO ]  Mapped "{[/beans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41570 ] - [ INFO ]  Mapped "{[/dump],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41570 ] - [ INFO ]  Mapped "{[/autoconfig],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41571 ] - [ INFO ]  Mapped "{[/trace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41571 ] - [ INFO ]  Mapped "{[/configprops],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:28  [ main:41571 ] - [ INFO ]  Mapped "{[/mappings],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-30 10:04:29  [ main:42039 ] - [ INFO ]  

Using default security password: 9b8bf38c-e03e-4a89-b10b-e90523b6f889

2016-11-30 10:04:29  [ main:42335 ] - [ INFO ]  Creating filter chain: Ant [pattern='/css/**'], []
2016-11-30 10:04:29  [ main:42335 ] - [ INFO ]  Creating filter chain: Ant [pattern='/js/**'], []
2016-11-30 10:04:29  [ main:42335 ] - [ INFO ]  Creating filter chain: Ant [pattern='/images/**'], []
2016-11-30 10:04:29  [ main:42335 ] - [ INFO ]  Creating filter chain: Ant [pattern='/**/favicon.ico'], []
2016-11-30 10:04:29  [ main:42336 ] - [ INFO ]  Creating filter chain: Ant [pattern='/error'], []
2016-11-30 10:04:29  [ main:42667 ] - [ INFO ]  Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f57dbd0, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ec68dec, org.springframework.security.web.header.HeaderWriterFilter@6cd99ca5, org.springframework.web.filter.CharacterEncodingFilter@458bf662, org.springframework.security.web.authentication.logout.LogoutFilter@eb1327e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6518c2a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21b17433, tiger.web.api.SecurityConfig$SecurityContextAuthenticationFilter@33459a1c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65cdec59, org.springframework.security.web.session.SessionManagementFilter@2a6304f2, org.springframework.security.web.access.ExceptionTranslationFilter@5bf969a8]
2016-11-30 10:04:30  [ main:42951 ] - [ INFO ]  Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/info'], Ant [pattern='/info/**'], Ant [pattern='/info.*'], Ant [pattern='/health'], Ant [pattern='/health/**'], Ant [pattern='/health.*'], Ant [pattern='/env'], Ant [pattern='/env/**'], Ant [pattern='/env.*'], Ant [pattern='/metrics'], Ant [pattern='/metrics/**'], Ant [pattern='/metrics.*'], Ant [pattern='/shutdown'], Ant [pattern='/shutdown/**'], Ant [pattern='/shutdown.*'], Ant [pattern='/beans'], Ant [pattern='/beans/**'], Ant [pattern='/beans.*'], Ant [pattern='/dump'], Ant [pattern='/dump/**'], Ant [pattern='/dump.*'], Ant [pattern='/autoconfig'], Ant [pattern='/autoconfig/**'], Ant [pattern='/autoconfig.*'], Ant [pattern='/trace'], Ant [pattern='/trace/**'], Ant [pattern='/trace.*'], Ant [pattern='/configprops'], Ant [pattern='/configprops/**'], Ant [pattern='/configprops.*'], Ant [pattern='/mappings'], Ant [pattern='/mappings/**'], Ant [pattern='/mappings.*']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30094d11, org.springframework.security.web.context.SecurityContextPersistenceFilter@2319ecc4, org.springframework.security.web.header.HeaderWriterFilter@49b7cd0e, org.springframework.security.web.authentication.logout.LogoutFilter@1f86afc0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2959e587, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@34e422c6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43cc56e9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f5327c7, org.springframework.security.web.session.SessionManagementFilter@6eb5fb7, org.springframework.security.web.access.ExceptionTranslationFilter@5228b851, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6e4abb58]
2016-11-30 10:04:38  [ main:50846 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2016-11-30 10:04:42  [ main:54938 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-30 10:04:42  [ main:54945 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-30 10:04:42  [ main:54950 ] - [ INFO ]  Starting beans in phase 0
2016-11-30 10:04:42  [ main:54955 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2016-11-30 10:04:42  [ main:54986 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2016-11-30 10:04:42  [ main:54995 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2016-11-30 10:04:42  [ main:55003 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2016-11-30 10:04:42  [ main:55007 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2016-11-30 10:04:42  [ main:55016 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2016-11-30 10:04:42  [ main:55021 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2016-11-30 10:04:42  [ main:55026 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2016-11-30 10:04:42  [ main:55036 ] - [ INFO ]  Located managed bean 'autoConfigurationAuditEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationAuditEndpoint]
2016-11-30 10:04:42  [ main:55043 ] - [ INFO ]  Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2016-11-30 10:04:42  [ main:55053 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2016-11-30 10:04:42  [ main:55195 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@17ea3770, testMethod = testCreateLoanTemplate@LoanTemplateControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2346c632]; rollback [true]
2016-11-30 10:04:42  [ main:55199 ] - [ INFO ]  测试启动
2016-11-30 10:04:42  [ main:55223 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-30 10:04:42  [ main:55223 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-30 10:04:42  [ main:55375 ] - [ INFO ]  FrameworkServlet '': initialization completed in 152 ms
2016-11-30 10:04:43  [ main:56170 ] - [ INFO ]  存放缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:43  [ main:56375 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:43  [ main:56656 ] - [ INFO ]  用户登录成功 [1023]
2016-11-30 10:04:44  [ main:57025 ] - [ INFO ]  登录成功，获取token [1dd668d3c1ce4a259f171e73ac546d6a]
2016-11-30 10:04:44  [ main:57068 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_1dd668d3c1ce4a259f171e73ac546d6a
2016-11-30 10:04:44  [ main:57077 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_1dd668d3c1ce4a259f171e73ac546d6a
2016-11-30 10:04:44  [ main:57100 ] - [ ERROR ]  插入缓存数据失败, key=login_log_id_1dd668d3c1ce4a259f171e73ac546d6a
2016-11-30 10:04:44  [ main:57104 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:44  [ main:57696 ] - [ ERROR ]  插入缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:44  [ main:57761 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@17ea3770, testMethod = testCreateLoanTemplate@LoanTemplateControllerTests, testException = org.junit.internal.runners.model.MultipleFailureException: There were 2 errors:
  org.apache.shiro.cache.CacheException(net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream@593fd72f])
  org.springframework.web.util.NestedServletException(Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.), mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-30 10:04:45  [ main:57799 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@161eafe, testMethod = testAllLoanTemplates@LoanTemplateControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2346c632]; rollback [true]
2016-11-30 10:04:45  [ main:57800 ] - [ INFO ]  测试启动
2016-11-30 10:04:45  [ main:57800 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-30 10:04:45  [ main:57801 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-30 10:04:45  [ main:57809 ] - [ INFO ]  FrameworkServlet '': initialization completed in 8 ms
2016-11-30 10:04:45  [ main:57893 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:45  [ main:57992 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:45  [ main:58015 ] - [ INFO ]  用户登录成功 [1023]
2016-11-30 10:04:45  [ main:58032 ] - [ INFO ]  登录成功，获取token [593ca5c807de4cc289d58e28fcd4f063]
2016-11-30 10:04:45  [ main:58040 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_593ca5c807de4cc289d58e28fcd4f063
2016-11-30 10:04:45  [ main:58044 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_593ca5c807de4cc289d58e28fcd4f063
2016-11-30 10:04:45  [ main:58066 ] - [ ERROR ]  插入缓存数据失败, key=login_log_id_593ca5c807de4cc289d58e28fcd4f063
2016-11-30 10:04:45  [ main:58067 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:45  [ main:58526 ] - [ ERROR ]  插入缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:45  [ main:58573 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@161eafe, testMethod = testAllLoanTemplates@LoanTemplateControllerTests, testException = org.junit.internal.runners.model.MultipleFailureException: There were 2 errors:
  org.apache.shiro.cache.CacheException(net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream@593fd72f])
  org.springframework.web.util.NestedServletException(Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.), mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-30 10:04:45  [ main:58606 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@7ec09c60, testMethod = testDeleteLoanTemplate@LoanTemplateControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2346c632]; rollback [true]
2016-11-30 10:04:45  [ main:58606 ] - [ INFO ]  测试启动
2016-11-30 10:04:45  [ main:58606 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-30 10:04:45  [ main:58606 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-30 10:04:45  [ main:58612 ] - [ INFO ]  FrameworkServlet '': initialization completed in 6 ms
2016-11-30 10:04:45  [ main:58659 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:45  [ main:58758 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:46  [ main:58778 ] - [ INFO ]  用户登录成功 [1023]
2016-11-30 10:04:46  [ main:58782 ] - [ INFO ]  登录成功，获取token [b0565166887d4f819f07ab9430bdc131]
2016-11-30 10:04:46  [ main:58788 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_b0565166887d4f819f07ab9430bdc131
2016-11-30 10:04:46  [ main:58790 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_b0565166887d4f819f07ab9430bdc131
2016-11-30 10:04:46  [ main:58814 ] - [ ERROR ]  插入缓存数据失败, key=login_log_id_b0565166887d4f819f07ab9430bdc131
2016-11-30 10:04:46  [ main:58815 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:46  [ main:58925 ] - [ ERROR ]  插入缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:46  [ main:58967 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@7ec09c60, testMethod = testDeleteLoanTemplate@LoanTemplateControllerTests, testException = org.junit.internal.runners.model.MultipleFailureException: There were 2 errors:
  org.apache.shiro.cache.CacheException(net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream@593fd72f])
  org.springframework.web.util.NestedServletException(Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.), mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-30 10:04:46  [ main:58991 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@64bb9e57, testMethod = testUpdateLoanTemplate@LoanTemplateControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2346c632]; rollback [true]
2016-11-30 10:04:46  [ main:58991 ] - [ INFO ]  测试启动
2016-11-30 10:04:46  [ main:58991 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-30 10:04:46  [ main:58991 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-30 10:04:46  [ main:58996 ] - [ INFO ]  FrameworkServlet '': initialization completed in 5 ms
2016-11-30 10:04:46  [ main:59041 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:46  [ main:59190 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:46  [ main:59209 ] - [ INFO ]  用户登录成功 [1023]
2016-11-30 10:04:46  [ main:59222 ] - [ INFO ]  登录成功，获取token [e11f98d6ec7e480cb60cb01fe6b90e30]
2016-11-30 10:04:46  [ main:59226 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_e11f98d6ec7e480cb60cb01fe6b90e30
2016-11-30 10:04:46  [ main:59227 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_e11f98d6ec7e480cb60cb01fe6b90e30
2016-11-30 10:04:46  [ main:59246 ] - [ ERROR ]  插入缓存数据失败, key=login_log_id_e11f98d6ec7e480cb60cb01fe6b90e30
2016-11-30 10:04:46  [ main:59248 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:46  [ main:59360 ] - [ ERROR ]  插入缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:46  [ main:59401 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@64bb9e57, testMethod = testUpdateLoanTemplate@LoanTemplateControllerTests, testException = org.junit.internal.runners.model.MultipleFailureException: There were 2 errors:
  org.apache.shiro.cache.CacheException(net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream@593fd72f])
  org.springframework.web.util.NestedServletException(Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.), mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-30 10:04:46  [ main:59425 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@67c943b2, testMethod = testGetLoanTemplateById@LoanTemplateControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2346c632]; rollback [true]
2016-11-30 10:04:46  [ main:59425 ] - [ INFO ]  测试启动
2016-11-30 10:04:46  [ main:59425 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-30 10:04:46  [ main:59425 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-30 10:04:46  [ main:59431 ] - [ INFO ]  FrameworkServlet '': initialization completed in 6 ms
2016-11-30 10:04:46  [ main:59475 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:46  [ main:59567 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:46  [ main:59586 ] - [ INFO ]  用户登录成功 [1023]
2016-11-30 10:04:46  [ main:59589 ] - [ INFO ]  登录成功，获取token [e5084d6f5c8a4fb18d3f5e875fdd3c9f]
2016-11-30 10:04:46  [ main:59596 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_e5084d6f5c8a4fb18d3f5e875fdd3c9f
2016-11-30 10:04:46  [ main:59597 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_e5084d6f5c8a4fb18d3f5e875fdd3c9f
2016-11-30 10:04:46  [ main:59620 ] - [ ERROR ]  插入缓存数据失败, key=login_log_id_e5084d6f5c8a4fb18d3f5e875fdd3c9f
2016-11-30 10:04:46  [ main:59621 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:46  [ main:59733 ] - [ ERROR ]  插入缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:47  [ main:59773 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@67c943b2, testMethod = testGetLoanTemplateById@LoanTemplateControllerTests, testException = org.junit.internal.runners.model.MultipleFailureException: There were 2 errors:
  org.apache.shiro.cache.CacheException(net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream@593fd72f])
  org.springframework.web.util.NestedServletException(Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.), mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-30 10:04:47  [ main:59796 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@433f798, testMethod = createLoanWithAll@LoanTemplateControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2346c632]; rollback [true]
2016-11-30 10:04:47  [ main:59796 ] - [ INFO ]  测试启动
2016-11-30 10:04:47  [ main:59797 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-30 10:04:47  [ main:59797 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-30 10:04:47  [ main:59804 ] - [ INFO ]  FrameworkServlet '': initialization completed in 7 ms
2016-11-30 10:04:47  [ main:59851 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:47  [ main:59947 ] - [ INFO ]  成功获取缓存 [PUBLIC] -> [tiger.common.util.component.qiniu.QiniuUtil@10e79077]
2016-11-30 10:04:47  [ main:59970 ] - [ INFO ]  用户登录成功 [1023]
2016-11-30 10:04:47  [ main:59973 ] - [ INFO ]  登录成功，获取token [ad2ce2be55c440fea7400448ddd98e14]
2016-11-30 10:04:47  [ main:59985 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_ad2ce2be55c440fea7400448ddd98e14
2016-11-30 10:04:47  [ main:59988 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_ad2ce2be55c440fea7400448ddd98e14
2016-11-30 10:04:47  [ main:60009 ] - [ ERROR ]  插入缓存数据失败, key=login_log_id_ad2ce2be55c440fea7400448ddd98e14
2016-11-30 10:04:47  [ main:60011 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:47  [ main:60118 ] - [ ERROR ]  插入缓存数据失败, key=account_auth_domain_1023
2016-11-30 10:04:47  [ main:60162 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@4a0c625 testClass = LoanTemplateControllerTests, testInstance = tiger.web.api.loan.LoanTemplateControllerTests@433f798, testMethod = createLoanWithAll@LoanTemplateControllerTests, testException = org.junit.internal.runners.model.MultipleFailureException: There were 2 errors:
  org.apache.shiro.cache.CacheException(net.sf.ehcache.CacheException: Another unnamed CacheManager already exists in the same VM. Please provide unique names for each CacheManager in the config or do one of following:
1. Use one of the CacheManager.create() static factory methods to reuse same CacheManager with same name or create one if necessary
2. Shutdown the earlier cacheManager before creating new one with same name.
The source of the existing CacheManager is: InputStreamConfigurationSource [stream=sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream@593fd72f])
  org.springframework.web.util.NestedServletException(Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.), mergedContextConfiguration = [WebMergedContextConfiguration@3832ecba testClass = LoanTemplateControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-30 10:04:47  [ Thread-9:60170 ] - [ INFO ]  Closing org.springframework.web.context.support.GenericWebApplicationContext@1d29cf23: startup date [Wed Nov 30 10:03:47 CST 2016]; root of context hierarchy
2016-11-30 10:04:47  [ Thread-9:60174 ] - [ INFO ]  Stopping beans in phase 0
2016-11-30 10:04:47  [ Thread-9:60182 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-30 10:04:47  [ Thread-9:60182 ] - [ INFO ]  Unregistering JMX-exposed beans
2016-11-30 10:04:47  [ Thread-9:60183 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-30 10:04:47  [ Thread-9:60190 ] - [ INFO ]  Shutting down EhCache CacheManager
2016-11-30 10:04:47  [ Thread-9:60216 ] - [ INFO ]  Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2016-11-30 10:04:47  [ Thread-9:60222 ] - [ INFO ]  Closing JPA EntityManagerFactory for persistence unit 'default'
