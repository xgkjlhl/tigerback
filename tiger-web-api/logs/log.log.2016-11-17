2016-11-17 12:51:46  [ main:0 ] - [ INFO ]  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-11-17 12:51:46  [ main:90 ] - [ INFO ]  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3a5ed7a6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6325a3ee, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1d16f93d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@67b92f0a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b9627bc]
2016-11-17 12:51:47  [ main:793 ] - [ INFO ]  Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4b1c1ea0: startup date [Thu Nov 17 12:51:47 CST 2016]; root of context hierarchy
2016-11-17 12:51:57  [ main:11038 ] - [ INFO ]  Overriding bean definition for bean 'cacheManager': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/AppConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/ShiroConfig.class]]
2016-11-17 12:52:00  [ main:13918 ] - [ INFO ]  Bean 'shiroConfig' of type [class tiger.web.api.ShiroConfig$$EnhancerBySpringCGLIB$$e904b54e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:00  [ main:14257 ] - [ INFO ]  HV000001: Hibernate Validator 5.1.3.Final
2016-11-17 12:52:01  [ main:14590 ] - [ INFO ]  Bean 'org.springframework.scheduling.annotation.SchedulingConfiguration' of type [class org.springframework.scheduling.annotation.SchedulingConfiguration$$EnhancerBySpringCGLIB$$29d0c74e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:03  [ main:16605 ] - [ WARN ]  diskStorePath '/var/folders/3n/qllk7qhn0sv4tsd4gsqjl8z40000gn/T/shiro-ehcache' is already used by an existing CacheManager either in the same VM or in a different process.
The diskStore path for this CacheManager will be set to /var/folders/3n/qllk7qhn0sv4tsd4gsqjl8z40000gn/T/shiro-ehcache/ehcache_auto_created5243351101176996322diskstore.
To avoid this warning consider using the CacheManager factory methods to create a singleton CacheManager or specifying a separate ehcache configuration (ehcache.xml) for each CacheManager instance.
2016-11-17 12:52:03  [ main:16753 ] - [ WARN ]  Data in persistent disk stores is ignored for stores from automatically created directories.
Remove diskPersistent or resolve the conflicting disk paths in cache configuration.
Deleting data file /var/folders/3n/qllk7qhn0sv4tsd4gsqjl8z40000gn/T/shiro-ehcache/ehcache_auto_created5243351101176996322diskstore/shiro-active%0053ession%0043ache.data
2016-11-17 12:52:03  [ main:16756 ] - [ INFO ]  Bean 'cacheManager' of type [class org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:03  [ main:16760 ] - [ INFO ]  Cache with name 'tiger.web.api.ShiroRealm.authorizationCache' does not yet exist.  Creating now.
2016-11-17 12:52:03  [ main:16770 ] - [ INFO ]  Added EhCache named [tiger.web.api.ShiroRealm.authorizationCache]
2016-11-17 12:52:03  [ main:16792 ] - [ INFO ]  Bean 'myRealm' of type [class tiger.web.api.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:03  [ main:16859 ] - [ INFO ]  Bean 'securityManager' of type [class org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:03  [ main:16922 ] - [ INFO ]  Bean 'dataConfig' of type [class tiger.common.dal.DataConfig$$EnhancerBySpringCGLIB$$f9bd1d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:03  [ main:17036 ] - [ INFO ]  MLog clients using log4j logging.
2016-11-17 12:52:03  [ main:17325 ] - [ INFO ]  Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2016-11-17 12:52:04  [ main:17512 ] - [ INFO ]  Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:05  [ main:19271 ] - [ INFO ]  Bean 'sqlSessionFactory' of type [class org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:06  [ main:19843 ] - [ INFO ]  Bean 'workspaceVerifyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:06  [ main:20052 ] - [ INFO ]  Bean 'workspaceMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:06  [ main:20131 ] - [ INFO ]  Bean 'ucenterPostReplyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:06  [ main:20251 ] - [ INFO ]  Bean 'ucenterPostMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:06  [ main:20336 ] - [ INFO ]  Bean 'ucenterHelpMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:06  [ main:20408 ] - [ INFO ]  Bean 'ucenterHelpCatalogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20467 ] - [ INFO ]  Bean 'tagMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20546 ] - [ INFO ]  Bean 'systemParamsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20602 ] - [ INFO ]  Bean 'statisticsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20638 ] - [ INFO ]  Bean 'staffMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20689 ] - [ INFO ]  Bean 'smsVerifyCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20749 ] - [ INFO ]  Bean 'roleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20840 ] - [ INFO ]  Bean 'regionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20885 ] - [ INFO ]  Bean 'portalUIMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20921 ] - [ INFO ]  Bean 'permissionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:20988 ] - [ INFO ]  Bean 'paymentRefundMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:21131 ] - [ INFO ]  Bean 'paymentOrderObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:21185 ] - [ INFO ]  Bean 'paymentOrderMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:21264 ] - [ INFO ]  Bean 'paymentObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:21315 ] - [ INFO ]  Bean 'msgTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:07  [ main:21378 ] - [ INFO ]  Bean 'msgTplCatgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:21483 ] - [ INFO ]  Bean 'messageMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:21610 ] - [ INFO ]  Bean 'marketProjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:21676 ] - [ INFO ]  Bean 'loanTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:21752 ] - [ INFO ]  Bean 'loanSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:21808 ] - [ INFO ]  Bean 'loanRefineMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:21939 ] - [ INFO ]  Bean 'loanRecordMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:22012 ] - [ INFO ]  Bean 'loanRecordItemsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:22068 ] - [ INFO ]  Bean 'loanPawnParamMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:22123 ] - [ INFO ]  Bean 'loanPawnMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:22255 ] - [ INFO ]  Bean 'loanMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:22343 ] - [ INFO ]  Bean 'loanCustomerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:08  [ main:22392 ] - [ INFO ]  Bean 'invitationCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22455 ] - [ INFO ]  Bean 'feedbackMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22520 ] - [ INFO ]  Bean 'customerMsgScheduleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22585 ] - [ INFO ]  Bean 'customerMsgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22743 ] - [ INFO ]  Bean 'customerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22779 ] - [ INFO ]  Bean 'companyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22837 ] - [ INFO ]  Bean 'attachRelateMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22882 ] - [ INFO ]  Bean 'attachMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:22975 ] - [ INFO ]  Bean 'activityMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:23025 ] - [ INFO ]  Bean 'accountSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:23096 ] - [ INFO ]  Bean 'accountMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:23150 ] - [ INFO ]  Bean 'accountLoginLogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:09  [ main:23199 ] - [ INFO ]  Bean 'accountBindMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:10  [ main:23591 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b97b4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:11  [ main:24533 ] - [ INFO ]  Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:11  [ main:24646 ] - [ INFO ]  Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:11  [ main:24663 ] - [ INFO ]  Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:52:13  [ main:26811 ] - [ INFO ]  Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1ic9kv904im20j02c|7c52fc81, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1ic9kv904im20j02c|7c52fc81, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://139.196.30.98:3306/tiger?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 28800, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2016-11-17 12:52:15  [ main:28497 ] - [ INFO ]  Building JPA container EntityManagerFactory for persistence unit 'default'
2016-11-17 12:52:15  [ main:28534 ] - [ INFO ]  HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2016-11-17 12:52:15  [ main:28798 ] - [ INFO ]  HHH000412: Hibernate Core {4.3.8.Final}
2016-11-17 12:52:15  [ main:28801 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-11-17 12:52:15  [ main:28804 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-11-17 12:52:15  [ main:29361 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2016-11-17 12:52:16  [ main:29770 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2016-11-17 12:52:16  [ main:29800 ] - [ INFO ]  HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-11-17 12:52:16  [ main:29942 ] - [ INFO ]  HHH000397: Using ASTQueryTranslatorFactory
2016-11-17 12:52:33  [ main:46532 ] - [ INFO ]  ProducerConfig values: 
	compression.type = none
	metric.reporters = []
	metadata.max.age.ms = 300000
	metadata.fetch.timeout.ms = 60000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [localhost:9092]
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	max.block.ms = 60000
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	ssl.truststore.password = null
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	client.id = 
	ssl.endpoint.identification.algorithm = null
	ssl.protocol = TLS
	request.timeout.ms = 30000
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	acks = all
	batch.size = 16384
	ssl.keystore.location = null
	receive.buffer.bytes = 32768
	ssl.cipher.suites = null
	ssl.truststore.type = JKS
	security.protocol = PLAINTEXT
	retries = 0
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.truststore.location = null
	ssl.keystore.password = null
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	send.buffer.bytes = 131072
	linger.ms = 1

2016-11-17 12:52:33  [ main:46750 ] - [ INFO ]  Kafka version : 0.9.0.0
2016-11-17 12:52:33  [ main:46751 ] - [ INFO ]  Kafka commitId : fc7243c2af4b2b4a
2016-11-17 12:52:45  [ main:58614 ] - [ INFO ]  No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.
2016-11-17 12:52:47  [ main:61102 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.login(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:52:47  [ main:61103 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.AccountController.logout(java.lang.String)
2016-11-17 12:52:47  [ main:61104 ] - [ INFO ]  Mapped "{[/account/profile],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getUserProfile()
2016-11-17 12:52:47  [ main:61104 ] - [ INFO ]  Mapped "{[/account/icon/{attachId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.attachHeaderIcon(java.lang.Long)
2016-11-17 12:52:47  [ main:61104 ] - [ INFO ]  Mapped "{[/account/profile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.updateUserProfile(tiger.web.api.form.user.AccountUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61104 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[GET],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForResetPass(java.lang.String)
2016-11-17 12:52:47  [ main:61109 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.verifyMsgCode(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61109 ] - [ INFO ]  Mapped "{[/account/password],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.resetPassword(tiger.web.api.form.user.ResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61109 ] - [ INFO ]  Mapped "{[/account/password],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changePassword(tiger.web.api.form.user.SimpleResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61109 ] - [ INFO ]  Mapped "{[/account/sms],methods=[GET],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForRegister(java.lang.String)
2016-11-17 12:52:47  [ main:61110 ] - [ INFO ]  Mapped "{[/account/sms],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.authMsgCodeForRegister(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61110 ] - [ INFO ]  Mapped "{[/account],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.signUp(tiger.web.api.form.user.AccountAddForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61110 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isMobileExist(java.lang.String)
2016-11-17 12:52:47  [ main:61110 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[scope=profile],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.readByMobile(java.lang.String)
2016-11-17 12:52:47  [ main:61110 ] - [ INFO ]  Mapped "{[/account/mobile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changeMobile(tiger.web.api.form.user.MobileChangeForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61110 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isValidToken(java.lang.String,java.lang.String)
2016-11-17 12:52:47  [ main:61110 ] - [ INFO ]  Mapped "{[/account/profile/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.updateAccountSetting(tiger.web.api.form.user.AccountLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61111 ] - [ INFO ]  Mapped "{[/account/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getAccountProfileById(java.lang.Long)
2016-11-17 12:52:47  [ main:61113 ] - [ INFO ]  Mapped "{[/account/profile/region],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.account.AccountController.getAccountRegion(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61131 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.listDomain.AccountSettingListDomain>> tiger.web.api.controller.account.AccountSettingController.getNotificationSetting()
2016-11-17 12:52:47  [ main:61131 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountSettingController.updateNotificationSetting(tiger.web.api.form.user.NotificationPushUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61138 ] - [ INFO ]  Mapped "{[/account/company],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.getUserCompany()
2016-11-17 12:52:47  [ main:61142 ] - [ INFO ]  Mapped "{[/account/company],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.updateUserCompany(tiger.web.api.form.company.CompanyForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61142 ] - [ INFO ]  Mapped "{[/test-redis],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.RedisTestController.read(java.lang.Long)
2016-11-17 12:52:47  [ main:61143 ] - [ INFO ]  Mapped "{[/social/url],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.String> tiger.web.api.controller.account.SocialAccountController.getRedirectUrl(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61144 ] - [ INFO ]  Mapped "{[/social/bind],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.bindSocial(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61144 ] - [ INFO ]  Mapped "{[/social/binds],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountBindDomain>> tiger.web.api.controller.account.SocialAccountController.binds()
2016-11-17 12:52:47  [ main:61144 ] - [ INFO ]  Mapped "{[/social/bind/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.deBind(java.lang.Long)
2016-11-17 12:52:47  [ main:61145 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountSocialAuthDomain> tiger.web.api.controller.account.SocialAccountController.thirdPartAuth(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:52:47  [ main:61145 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.SocialAccountController.bindThirdPartAccount(tiger.web.api.form.user.SocialBindForm,org.springframework.validation.BindingResult,int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:52:47  [ main:61147 ] - [ INFO ]  Mapped "{[/activity/activities],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.ActivityDomain>> tiger.web.api.controller.activity.ActivityController.allActivities(tiger.common.dal.query.ActivityQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61148 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=detail],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalListDetail(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61148 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=summary],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalSummaryListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalList(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61149 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getAttachById(long)
2016-11-17 12:52:47  [ main:61149 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[action=preview],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getPreviewAttachById(long,java.lang.String)
2016-11-17 12:52:47  [ main:61149 ] - [ INFO ]  Mapped "{[/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.createAttach(tiger.web.api.form.attach.AttachForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61149 ] - [ INFO ]  Mapped "{[/qiniuattach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object tiger.web.api.controller.attach.QiniuAttachController.qiniuCallBack(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,tiger.web.api.form.attach.QiniuAttachForm)
2016-11-17 12:52:47  [ main:61150 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.attach.QiniuAttachController.deleteAttachById(long)
2016-11-17 12:52:47  [ main:61150 ] - [ INFO ]  Mapped "{[/system/dict/{dictType}],methods=[GET],params=[scope=loan],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.DictController.getLoanDict(java.lang.String)
2016-11-17 12:52:47  [ main:61151 ] - [ INFO ]  Mapped "{[/social_auth],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.web.servlet.ModelAndView tiger.web.api.controller.base.IndexController.socialAuthRedirectUrl(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:52:47  [ main:61152 ] - [ INFO ]  Mapped "{[/system/dateTime],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Long> tiger.web.api.controller.base.SystemController.getSystemDateTime()
2016-11-17 12:52:47  [ main:61152 ] - [ INFO ]  Mapped "{[/system/systemparams],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.String>> tiger.web.api.controller.base.SystemController.getSystemParams(java.lang.String)
2016-11-17 12:52:47  [ main:61152 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.getCaptcha(javax.servlet.http.HttpServletResponse)
2016-11-17 12:52:47  [ main:61152 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.base.SystemController.verifyCaptcha(java.lang.String,java.lang.String)
2016-11-17 12:52:47  [ main:61152 ] - [ INFO ]  Mapped "{[/system/exception],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.collectException(tiger.web.api.form.system.ExceptionForm)
2016-11-17 12:52:47  [ main:61157 ] - [ INFO ]  Mapped "{[/customer],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.createCustomer(tiger.web.api.form.customer.CustomerCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61157 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.readCustomer(java.lang.Long)
2016-11-17 12:52:47  [ main:61157 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomer(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61158 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteCustomer(java.lang.Long)
2016-11-17 12:52:47  [ main:61158 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.listCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61158 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.listAllCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61158 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomer(java.lang.String,java.lang.Long)
2016-11-17 12:52:47  [ main:61158 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all && key=name],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomerByName(java.lang.String,java.lang.Long)
2016-11-17 12:52:47  [ main:61158 ] - [ INFO ]  Mapped "{[/customer/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.addAttach(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61158 ] - [ INFO ]  Mapped "{[/customer/{id}/attachs],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.customer.CustomerController.getAllAttachs(java.lang.Long)
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/customer/{id}/attach/{aid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteAttach(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/customer/{id}/loans],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.customer.CustomerController.listLoan(java.lang.Long,tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/customer/{id}/smses],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.customer.CustomerController.listSmses(java.lang.Long,tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/customer/{id}/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.listTags(java.lang.Long)
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/customers/tag/{tid}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.addTags(java.lang.Long,tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/customer/{id}/tag/{tid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.delTag(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.getAllTags()
2016-11-17 12:52:47  [ main:61159 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getBirthdayCustomerCount()
2016-11-17 12:52:47  [ main:61160 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.util.List<tiger.core.domain.CustomerDomain>>> tiger.web.api.controller.customer.CustomerController.listBirthdayCustomers()
2016-11-17 12:52:47  [ main:61160 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getCustomerCount()
2016-11-17 12:52:47  [ main:61160 ] - [ INFO ]  Mapped "{[/customers],methods=[PUT],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.deleteCustomers(tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61160 ] - [ INFO ]  Mapped "{[/customer/{id}/icon/{iconId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomerIcon(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61160 ] - [ INFO ]  Mapped "{[/customer/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.assignCustomerById(java.lang.Long,tiger.web.api.form.customer.CustomerAssignmentForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61160 ] - [ INFO ]  Mapped "{[/customers/recentPayBackCustomers],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.getRecentPayBackCustoemrs(tiger.common.dal.query.RecentPayBackCustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61161 ] - [ INFO ]  Mapped "{[/feedback],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.FeedbackDomain> tiger.web.api.controller.feedback.FeedbackController.createFeedback(tiger.web.api.form.feedback.FeedbackCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61164 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[operation=createWithAll],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.create(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61164 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.createLoan(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61165 ] - [ INFO ]  Mapped "{[/loan/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.payItems(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61165 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=trash],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.trashLoan(java.lang.Long)
2016-11-17 12:52:47  [ main:61166 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[PUT],params=[operation=recover],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.recoverLoan(java.lang.Long)
2016-11-17 12:52:47  [ main:61166 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoan(java.lang.Long)
2016-11-17 12:52:47  [ main:61166 ] - [ INFO ]  Mapped "{[/loan/{id}/customer/{customerId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.loan.LoanController.relateLoaner(java.lang.Long,java.lang.Long,java.lang.String)
2016-11-17 12:52:47  [ main:61166 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn/{pawnId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relatePawn(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61166 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.getLoanById(java.lang.Long)
2016-11-17 12:52:47  [ main:61166 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanController.getLoanPawnById(java.lang.Long)
2016-11-17 12:52:47  [ main:61166 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<tiger.common.dal.enums.LoanCustomerTypeEnum, tiger.core.domain.CustomerDomain>> tiger.web.api.controller.loan.LoanController.getLoanLoanerById(java.lang.Long)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.updateLoanLoanerById(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loan/{id}/records],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRefineDomain>> tiger.web.api.controller.loan.LoanController.getLoanRecordsById(java.lang.Long)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loan/{id}/modifiedRecords],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.getModifiedLoanRecords(java.lang.Long)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.loan.LoanController.queryLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanController.countLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loan/{id}/attaches],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.loan.LoanController.listLoanAttachments(java.lang.Long)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relateLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61167 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61168 ] - [ INFO ]  Mapped "{[/loan/{id}/paymentSituation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.loan.LoanController.getLoanPaymentSituationById(java.lang.Long)
2016-11-17 12:52:47  [ main:61168 ] - [ INFO ]  Mapped "{[/loan/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.assignLoanById(java.lang.Long,tiger.web.api.form.loan.LoanAssignmentForm)
2016-11-17 12:52:47  [ main:61168 ] - [ INFO ]  Mapped "{[/loan/{id}/sms],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.loan.LoanNotificationController.getHistorySms(java.lang.Long)
2016-11-17 12:52:47  [ main:61169 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.getSmsSetting(java.lang.Long)
2016-11-17 12:52:47  [ main:61169 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.settingSms(java.lang.Long,tiger.web.api.form.loan.LoanSmsSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61169 ] - [ INFO ]  Mapped "{[/loan/pawn],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.createLoanPawn(tiger.web.api.form.loan.LoanPawnCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61170 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.updateLoanPawn(long,tiger.web.api.form.loan.LoanPawnUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61170 ] - [ INFO ]  Mapped "{[/loan/pawn/{pawnId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.readByPawnId(long)
2016-11-17 12:52:47  [ main:61170 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.addAttachToLoanPawn(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61170 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.deleteAttachFromLoanPawn(long,long)
2016-11-17 12:52:47  [ main:61171 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getAllPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61171 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getPagePayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61171 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanPayController.countPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61172 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanPayController.getLoanBill(long)
2016-11-17 12:52:47  [ main:61172 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[PUT],params=[operation=merge],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanMergedBillDomain> tiger.web.api.controller.loan.LoanPayController.getMergedBillByIds(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61177 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.payMergedBills(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61177 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[PUT],params=[operation=launch],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.launchLoan(long,long,java.util.Date)
2016-11-17 12:52:47  [ main:61177 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[GET],params=[operation=calculate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.trimLoanRecord(long,long,tiger.web.api.form.loan.LoanRecalForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61177 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.paySingleBill(long,long,tiger.web.api.form.loan.LoanSinglePayForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61177 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/cancellation],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.cancelLastPayback(long)
2016-11-17 12:52:47  [ main:61180 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.modifyLoanBill(tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult,java.lang.Long)
2016-11-17 12:52:47  [ main:61182 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayModifyController.deleteModification(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61183 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.updateModification(java.lang.Long,java.lang.Long,tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61190 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRefinementLimitDomain> tiger.web.api.controller.loan.LoanRefineController.getLoanRefinementLimit(long)
2016-11-17 12:52:47  [ main:61191 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanRefineController.refineLoan(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61191 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanRefineController.previewLoanRefinePayItems(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61192 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.getLoanTemplateById(long)
2016-11-17 12:52:47  [ main:61192 ] - [ INFO ]  Mapped "{[/loan/template],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.createLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61192 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.deleteLoanTemplate(long)
2016-11-17 12:52:47  [ main:61192 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.updateLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:52:47  [ main:61192 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.loanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:52:47  [ main:61193 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.allLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:52:47  [ main:61193 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanTemplateController.countLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:52:47  [ main:61193 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.awesomeProject(java.lang.Long)
2016-11-17 12:52:47  [ main:61194 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.collectProject(java.lang.Long)
2016-11-17 12:52:47  [ main:61194 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.deAwesomeProject(java.lang.Long)
2016-11-17 12:52:47  [ main:61194 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.deCollectProject(java.lang.Long)
2016-11-17 12:52:47  [ main:61194 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/sharing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.market.MarketProjectActionController.shareProject()
2016-11-17 12:52:47  [ main:61195 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.getById(java.lang.Long,java.lang.Long)
2016-11-17 12:52:47  [ main:61195 ] - [ INFO ]  Mapped "{[/market/project],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.createMarketProject(tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61196 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectController.deleteProject(java.lang.Long)
2016-11-17 12:52:47  [ main:61196 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.updateProject(java.lang.Long,tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61196 ] - [ INFO ]  Mapped "{[/market/projects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.queryProjects(tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-17 12:52:47  [ main:61196 ] - [ INFO ]  Mapped "{[/market/projects/userCollection/{account}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getUserCollectedProjects(java.lang.Long,tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-17 12:52:47  [ main:61205 ] - [ INFO ]  Mapped "{[/market/topAccounts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getTopAccounts(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61209 ] - [ INFO ]  Mapped "{[/market/latestProjects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getLatestProjects(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61225 ] - [ INFO ]  Mapped "{[/market/regions],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listAllRegions(tiger.common.dal.query.RegionQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61226 ] - [ INFO ]  Mapped "{[/market/region/support],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listSupportedRegions()
2016-11-17 12:52:47  [ main:61226 ] - [ INFO ]  Mapped "{[/market/region/support/QRCode],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.market.RegionController.listSupportedRegionQRCodes(java.lang.String)
2016-11-17 12:52:47  [ main:61226 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.MessageDomain> tiger.web.api.controller.message.MessageController.getMessageById(java.lang.Long)
2016-11-17 12:52:47  [ main:61227 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatusById(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:52:47  [ main:61227 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.deleteMessageById(java.lang.Long)
2016-11-17 12:52:47  [ main:61227 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.MessageDomain>> tiger.web.api.controller.message.MessageController.getPaginatedMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61227 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.message.MessageController.countObjectBaseResultMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61227 ] - [ INFO ]  Mapped "{[/messages],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatuses(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61228 ] - [ INFO ]  Mapped "{[/portal/ui],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.portal.PortalController.getPicture(java.lang.String)
2016-11-17 12:52:47  [ main:61229 ] - [ INFO ]  Mapped "{[/sms],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.sms.SmsController.sendMsg(tiger.web.api.form.sms.SendSmsForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61230 ] - [ INFO ]  Mapped "{[/sms/templates],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getMsgTemplate()
2016-11-17 12:52:47  [ main:61230 ] - [ INFO ]  Mapped "{[/sms/history],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.sms.SmsController.showHistory(tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61230 ] - [ INFO ]  Mapped "{[/sms/history/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendAgain(long)
2016-11-17 12:52:47  [ main:61230 ] - [ INFO ]  Mapped "{[/sms/scheduler],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getallSheduler()
2016-11-17 12:52:47  [ main:61230 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.snedSheduler(java.lang.Long)
2016-11-17 12:52:47  [ main:61231 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.deleteSheduler(java.lang.Long)
2016-11-17 12:52:47  [ main:61231 ] - [ INFO ]  Mapped "{[/sms/verify],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendVerifyCode(tiger.web.api.form.sms.SmsVerifyForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61233 ] - [ INFO ]  Mapped "{[/ucenter/help],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.addHelp(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61233 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.allHelps(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61233 ] - [ INFO ]  Mapped "{[/ucenter/commonHelps],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.commonHelps()
2016-11-17 12:52:47  [ main:61233 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.listHelps(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61234 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.getHelpById(long)
2016-11-17 12:52:47  [ main:61234 ] - [ INFO ]  Mapped "{[/ucenter/catalogs],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpCatalogDomain>> tiger.web.api.controller.ucenter.HelpController.allCatalogs()
2016-11-17 12:52:47  [ main:61234 ] - [ INFO ]  Mapped "{[/ucenter/catalog/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpCatalogDomain> tiger.web.api.controller.ucenter.HelpController.getCatalog(long)
2016-11-17 12:52:47  [ main:61235 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=help],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.searchHelp(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61235 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.updateHelpById(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:52:47  [ main:61235 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.deleteHelpById(long)
2016-11-17 12:52:47  [ main:61235 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}/common],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.commonHelpById(long,javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61237 ] - [ INFO ]  Mapped "{[/ucenter/post],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.addPost(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61237 ] - [ INFO ]  Mapped "{[/ucenter/stickyPosts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.stickyPosts()
2016-11-17 12:52:47  [ main:61237 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.allPosts()
2016-11-17 12:52:47  [ main:61237 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.listPosts(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61238 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.getPostById(java.lang.Long,java.lang.String)
2016-11-17 12:52:47  [ main:61238 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updatePostById(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:52:47  [ main:61238 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostById(long)
2016-11-17 12:52:47  [ main:61238 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/reply],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.addReply(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,long)
2016-11-17 12:52:47  [ main:61238 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.getAllReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-17 12:52:47  [ main:61238 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.listReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-17 12:52:47  [ main:61238 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.getPostReplyById(long)
2016-11-17 12:52:47  [ main:61239 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updateReplyById(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:52:47  [ main:61239 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostReplyById(long)
2016-11-17 12:52:47  [ main:61239 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=post],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.searchPost(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61239 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=reply],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.searchReply(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61239 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/stick],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.stickPostById(long,javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61240 ] - [ INFO ]  Mapped "{[/workspace],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.createGroupWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61240 ] - [ INFO ]  Mapped "{[/workspace],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61241 ] - [ INFO ]  Mapped "{[/workspace],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.deleteGroupWorkspace()
2016-11-17 12:52:47  [ main:61241 ] - [ INFO ]  Mapped "{[/workspace/transfer/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.transferGroupWorkspace(java.lang.Long)
2016-11-17 12:52:47  [ main:61241 ] - [ INFO ]  Mapped "{[/workspace/setting/loan],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspaceLoanSetting(tiger.web.api.form.workspace.WorkspaceLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61241 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.getWorkspace(java.lang.Long)
2016-11-17 12:52:47  [ main:61241 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.quitWorkspace(java.lang.Long)
2016-11-17 12:52:47  [ main:61241 ] - [ INFO ]  Mapped "{[/workspace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.checkCreateWorkspaceAbility()
2016-11-17 12:52:47  [ main:61242 ] - [ INFO ]  Mapped "{[/workspace/member/invitation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.generateInvitation()
2016-11-17 12:52:47  [ main:61243 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/joinByCode],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.workspace.WorkspaceMemberController.joinWorkspaceByInvitationCode(java.lang.String)
2016-11-17 12:52:47  [ main:61243 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getInvitationInfo(java.lang.String)
2016-11-17 12:52:47  [ main:61243 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceMemberDetailDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getWorkspaceMember(java.lang.Long)
2016-11-17 12:52:47  [ main:61243 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.addWorkspaceMember(java.lang.Long)
2016-11-17 12:52:47  [ main:61250 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.deleteWorkspaceMember(java.lang.Long)
2016-11-17 12:52:47  [ main:61251 ] - [ INFO ]  Mapped "{[/workspace/member/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.AccountWorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getUserAuthInWorkspace()
2016-11-17 12:52:47  [ main:61251 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}/role],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.updateWorkspaceRoles(java.lang.Long,tiger.web.api.form.workspace.WorkspaceRoleUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61252 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationsOfWorkspace()
2016-11-17 12:52:47  [ main:61252 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberVerifyDomain>> tiger.web.api.controller.workspace.WorkspaceMemberController.getVerificationsOfWorkspace(tiger.common.dal.query.WorkspaceVerifyQuery,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61253 ] - [ INFO ]  Mapped "{[/workspace/member/verification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationOfWorkspace(tiger.web.api.form.workspace.WorkspaceVerifyForm,org.springframework.validation.BindingResult)
2016-11-17 12:52:47  [ main:61253 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberListDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceMembers()
2016-11-17 12:52:47  [ main:61254 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceSearchController.countWorkspaceMembers()
2016-11-17 12:52:47  [ main:61256 ] - [ INFO ]  Mapped "{[/workspace/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.common.dal.enums.RoleEnum>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceRoles()
2016-11-17 12:52:47  [ main:61256 ] - [ INFO ]  Mapped "{[/workspaces],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaces()
2016-11-17 12:52:47  [ main:61271 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:47  [ main:61271 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[text/html],custom=[]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest)
2016-11-17 12:52:48  [ main:62365 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2016-11-17 12:52:50  [ main:63864 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4b1c1ea0: startup date [Thu Nov 17 12:51:47 CST 2016]; root of context hierarchy
2016-11-17 12:52:53  [ main:67371 ] - [ INFO ]  Initializing EhCache CacheManager
2016-11-17 12:53:05  [ main:78590 ] - [ INFO ]  Mapped "{[/mappings],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78592 ] - [ INFO ]  Mapped "{[/trace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78592 ] - [ INFO ]  Mapped "{[/dump],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78592 ] - [ INFO ]  Mapped "{[/shutdown],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2016-11-17 12:53:05  [ main:78592 ] - [ INFO ]  Mapped "{[/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78593 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2016-11-17 12:53:05  [ main:78593 ] - [ INFO ]  Mapped "{[/env],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78593 ] - [ INFO ]  Mapped "{[/configprops],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78593 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2016-11-17 12:53:05  [ main:78593 ] - [ INFO ]  Mapped "{[/metrics],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78593 ] - [ INFO ]  Mapped "{[/health],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2016-11-17 12:53:05  [ main:78593 ] - [ INFO ]  Mapped "{[/autoconfig],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:78594 ] - [ INFO ]  Mapped "{[/beans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:53:05  [ main:79380 ] - [ INFO ]  

Using default security password: 6ad370aa-6991-469c-aa01-c00dfa3f2f10

2016-11-17 12:53:06  [ main:79905 ] - [ INFO ]  Creating filter chain: Ant [pattern='/css/**'], []
2016-11-17 12:53:06  [ main:79905 ] - [ INFO ]  Creating filter chain: Ant [pattern='/js/**'], []
2016-11-17 12:53:06  [ main:79905 ] - [ INFO ]  Creating filter chain: Ant [pattern='/images/**'], []
2016-11-17 12:53:06  [ main:79905 ] - [ INFO ]  Creating filter chain: Ant [pattern='/**/favicon.ico'], []
2016-11-17 12:53:06  [ main:79905 ] - [ INFO ]  Creating filter chain: Ant [pattern='/error'], []
2016-11-17 12:53:06  [ main:80416 ] - [ INFO ]  Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3230879d, org.springframework.security.web.context.SecurityContextPersistenceFilter@3936c2ea, org.springframework.security.web.header.HeaderWriterFilter@5c9eb43f, org.springframework.web.filter.CharacterEncodingFilter@16fef84c, org.springframework.security.web.authentication.logout.LogoutFilter@685f7315, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ca28e44, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f2c7599, tiger.web.api.SecurityConfig$SecurityContextAuthenticationFilter@25cafb88, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7524c462, org.springframework.security.web.session.SessionManagementFilter@27887cfe, org.springframework.security.web.access.ExceptionTranslationFilter@47340483]
2016-11-17 12:53:07  [ main:81103 ] - [ INFO ]  Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/info'], Ant [pattern='/info/**'], Ant [pattern='/info.*'], Ant [pattern='/health'], Ant [pattern='/health/**'], Ant [pattern='/health.*'], Ant [pattern='/mappings'], Ant [pattern='/mappings/**'], Ant [pattern='/mappings.*'], Ant [pattern='/trace'], Ant [pattern='/trace/**'], Ant [pattern='/trace.*'], Ant [pattern='/dump'], Ant [pattern='/dump/**'], Ant [pattern='/dump.*'], Ant [pattern='/shutdown'], Ant [pattern='/shutdown/**'], Ant [pattern='/shutdown.*'], Ant [pattern='/env'], Ant [pattern='/env/**'], Ant [pattern='/env.*'], Ant [pattern='/configprops'], Ant [pattern='/configprops/**'], Ant [pattern='/configprops.*'], Ant [pattern='/metrics'], Ant [pattern='/metrics/**'], Ant [pattern='/metrics.*'], Ant [pattern='/autoconfig'], Ant [pattern='/autoconfig/**'], Ant [pattern='/autoconfig.*'], Ant [pattern='/beans'], Ant [pattern='/beans/**'], Ant [pattern='/beans.*']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5db74fc2, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b436d8e, org.springframework.security.web.header.HeaderWriterFilter@67e8b62f, org.springframework.security.web.authentication.logout.LogoutFilter@615d500e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5649af04, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f9f8683, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3de41291, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5bc7e759, org.springframework.security.web.session.SessionManagementFilter@5121b883, org.springframework.security.web.access.ExceptionTranslationFilter@201c808d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@619157ae]
2016-11-17 12:53:21  [ main:94926 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2016-11-17 12:53:29  [ main:102886 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-17 12:53:29  [ main:102900 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-17 12:53:29  [ main:102912 ] - [ INFO ]  Starting beans in phase 0
2016-11-17 12:53:29  [ main:102917 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2016-11-17 12:53:29  [ main:102985 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2016-11-17 12:53:29  [ main:102998 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2016-11-17 12:53:29  [ main:103005 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2016-11-17 12:53:29  [ main:103011 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2016-11-17 12:53:29  [ main:103018 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2016-11-17 12:53:29  [ main:103022 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2016-11-17 12:53:29  [ main:103027 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2016-11-17 12:53:29  [ main:103068 ] - [ INFO ]  Located managed bean 'autoConfigurationAuditEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationAuditEndpoint]
2016-11-17 12:53:29  [ main:103074 ] - [ INFO ]  Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2016-11-17 12:53:29  [ main:103129 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2016-11-17 12:53:29  [ main:103416 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@2e1933b6 testClass = AccountControllerTests, testInstance = tiger.web.api.account.AccountControllerTests@3ce164c4, testMethod = testSignUp@AccountControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@13db8dc7 testClass = AccountControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@71a51b23]; rollback [true]
2016-11-17 12:53:29  [ main:103419 ] - [ INFO ]  测试启动
2016-11-17 12:53:29  [ main:103434 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-17 12:53:29  [ main:103435 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-17 12:53:30  [ main:103739 ] - [ INFO ]  FrameworkServlet '': initialization completed in 304 ms
2016-11-17 12:53:31  [ main:105248 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_
2016-11-17 12:53:31  [ main:105252 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_
2016-11-17 12:53:31  [ main:105297 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_0
2016-11-17 12:53:31  [ main:105345 ] - [ INFO ]  测试关闭
2016-11-17 12:53:31  [ main:105401 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@2e1933b6 testClass = AccountControllerTests, testInstance = tiger.web.api.account.AccountControllerTests@3ce164c4, testMethod = testSignUp@AccountControllerTests, testException = com.jayway.jsonpath.PathNotFoundException: Property ['id'] not found in path $['data'], mergedContextConfiguration = [WebMergedContextConfiguration@13db8dc7 testClass = AccountControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-17 12:53:31  [ Thread-9:105423 ] - [ INFO ]  Closing org.springframework.web.context.support.GenericWebApplicationContext@4b1c1ea0: startup date [Thu Nov 17 12:51:47 CST 2016]; root of context hierarchy
2016-11-17 12:53:31  [ Thread-9:105426 ] - [ INFO ]  Stopping beans in phase 0
2016-11-17 12:53:31  [ Thread-9:105435 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-17 12:53:31  [ Thread-9:105436 ] - [ INFO ]  Unregistering JMX-exposed beans
2016-11-17 12:53:31  [ Thread-9:105437 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-17 12:53:32  [ Thread-9:105444 ] - [ INFO ]  Shutting down EhCache CacheManager
2016-11-17 12:53:32  [ Thread-9:105472 ] - [ INFO ]  Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2016-11-17 12:53:32  [ Thread-9:105484 ] - [ INFO ]  Closing JPA EntityManagerFactory for persistence unit 'default'
2016-11-17 12:54:55  [ main:0 ] - [ INFO ]  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-11-17 12:54:55  [ main:111 ] - [ INFO ]  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@564fabc8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@16d04d3d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@49ec71f8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1d2adfbe, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@36902638]
2016-11-17 12:54:56  [ main:949 ] - [ INFO ]  Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3754a4bf: startup date [Thu Nov 17 12:54:56 CST 2016]; root of context hierarchy
2016-11-17 12:55:06  [ main:10640 ] - [ INFO ]  Overriding bean definition for bean 'cacheManager': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/AppConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/ShiroConfig.class]]
2016-11-17 12:55:08  [ main:13289 ] - [ INFO ]  Bean 'shiroConfig' of type [class tiger.web.api.ShiroConfig$$EnhancerBySpringCGLIB$$32c337e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:09  [ main:13571 ] - [ INFO ]  HV000001: Hibernate Validator 5.1.3.Final
2016-11-17 12:55:09  [ main:13926 ] - [ INFO ]  Bean 'org.springframework.scheduling.annotation.SchedulingConfiguration' of type [class org.springframework.scheduling.annotation.SchedulingConfiguration$$EnhancerBySpringCGLIB$$738f49e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:11  [ main:16303 ] - [ INFO ]  Bean 'cacheManager' of type [class org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:11  [ main:16308 ] - [ INFO ]  Cache with name 'tiger.web.api.ShiroRealm.authorizationCache' does not yet exist.  Creating now.
2016-11-17 12:55:11  [ main:16320 ] - [ INFO ]  Added EhCache named [tiger.web.api.ShiroRealm.authorizationCache]
2016-11-17 12:55:12  [ main:16376 ] - [ INFO ]  Bean 'myRealm' of type [class tiger.web.api.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:12  [ main:16489 ] - [ INFO ]  Bean 'securityManager' of type [class org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:12  [ main:16570 ] - [ INFO ]  Bean 'dataConfig' of type [class tiger.common.dal.DataConfig$$EnhancerBySpringCGLIB$$595a546b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:12  [ main:16706 ] - [ INFO ]  MLog clients using log4j logging.
2016-11-17 12:55:12  [ main:17221 ] - [ INFO ]  Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2016-11-17 12:55:13  [ main:17500 ] - [ INFO ]  Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:14  [ main:19041 ] - [ INFO ]  Bean 'sqlSessionFactory' of type [class org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:15  [ main:19888 ] - [ INFO ]  Bean 'workspaceVerifyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:15  [ main:20127 ] - [ INFO ]  Bean 'workspaceMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:15  [ main:20243 ] - [ INFO ]  Bean 'ucenterPostReplyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20337 ] - [ INFO ]  Bean 'ucenterPostMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20475 ] - [ INFO ]  Bean 'ucenterHelpMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20577 ] - [ INFO ]  Bean 'ucenterHelpCatalogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20650 ] - [ INFO ]  Bean 'tagMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20705 ] - [ INFO ]  Bean 'systemParamsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20764 ] - [ INFO ]  Bean 'statisticsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20812 ] - [ INFO ]  Bean 'staffMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20919 ] - [ INFO ]  Bean 'smsVerifyCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:20981 ] - [ INFO ]  Bean 'roleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:21083 ] - [ INFO ]  Bean 'regionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:21152 ] - [ INFO ]  Bean 'portalUIMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:16  [ main:21209 ] - [ INFO ]  Bean 'permissionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21332 ] - [ INFO ]  Bean 'paymentRefundMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21414 ] - [ INFO ]  Bean 'paymentOrderObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21492 ] - [ INFO ]  Bean 'paymentOrderMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21538 ] - [ INFO ]  Bean 'paymentObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21661 ] - [ INFO ]  Bean 'msgTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21691 ] - [ INFO ]  Bean 'msgTplCatgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21816 ] - [ INFO ]  Bean 'messageMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:21933 ] - [ INFO ]  Bean 'marketProjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:22001 ] - [ INFO ]  Bean 'loanTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:22091 ] - [ INFO ]  Bean 'loanSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:22154 ] - [ INFO ]  Bean 'loanRefineMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:17  [ main:22274 ] - [ INFO ]  Bean 'loanRecordMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22361 ] - [ INFO ]  Bean 'loanRecordItemsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22496 ] - [ INFO ]  Bean 'loanPawnParamMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22530 ] - [ INFO ]  Bean 'loanPawnMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22650 ] - [ INFO ]  Bean 'loanMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22695 ] - [ INFO ]  Bean 'loanCustomerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22767 ] - [ INFO ]  Bean 'invitationCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22835 ] - [ INFO ]  Bean 'feedbackMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22912 ] - [ INFO ]  Bean 'customerMsgScheduleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:22982 ] - [ INFO ]  Bean 'customerMsgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:23162 ] - [ INFO ]  Bean 'customerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:23195 ] - [ INFO ]  Bean 'companyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:23237 ] - [ INFO ]  Bean 'attachRelateMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:18  [ main:23311 ] - [ INFO ]  Bean 'attachMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:19  [ main:23418 ] - [ INFO ]  Bean 'activityMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:19  [ main:23479 ] - [ INFO ]  Bean 'accountSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:19  [ main:23534 ] - [ INFO ]  Bean 'accountMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:19  [ main:23596 ] - [ INFO ]  Bean 'accountLoginLogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:19  [ main:23656 ] - [ INFO ]  Bean 'accountBindMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:19  [ main:24067 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$339c6c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:20  [ main:24937 ] - [ INFO ]  Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:20  [ main:25039 ] - [ INFO ]  Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:20  [ main:25060 ] - [ INFO ]  Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:55:22  [ main:27286 ] - [ INFO ]  Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1ic9kv9467u9jgzxx|41aebbb4, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1ic9kv9467u9jgzxx|41aebbb4, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://139.196.30.98:3306/tiger?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 28800, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2016-11-17 12:55:24  [ main:29181 ] - [ INFO ]  Building JPA container EntityManagerFactory for persistence unit 'default'
2016-11-17 12:55:24  [ main:29228 ] - [ INFO ]  HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2016-11-17 12:55:25  [ main:29604 ] - [ INFO ]  HHH000412: Hibernate Core {4.3.8.Final}
2016-11-17 12:55:25  [ main:29625 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-11-17 12:55:25  [ main:29628 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-11-17 12:55:26  [ main:30391 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2016-11-17 12:55:26  [ main:30876 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2016-11-17 12:55:26  [ main:30985 ] - [ INFO ]  HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-11-17 12:55:26  [ main:31176 ] - [ INFO ]  HHH000397: Using ASTQueryTranslatorFactory
2016-11-17 12:55:45  [ main:49707 ] - [ INFO ]  ProducerConfig values: 
	compression.type = none
	metric.reporters = []
	metadata.max.age.ms = 300000
	metadata.fetch.timeout.ms = 60000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [localhost:9092]
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	max.block.ms = 60000
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	ssl.truststore.password = null
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	client.id = 
	ssl.endpoint.identification.algorithm = null
	ssl.protocol = TLS
	request.timeout.ms = 30000
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	acks = all
	batch.size = 16384
	ssl.keystore.location = null
	receive.buffer.bytes = 32768
	ssl.cipher.suites = null
	ssl.truststore.type = JKS
	security.protocol = PLAINTEXT
	retries = 0
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.truststore.location = null
	ssl.keystore.password = null
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	send.buffer.bytes = 131072
	linger.ms = 1

2016-11-17 12:55:45  [ main:49851 ] - [ INFO ]  Kafka version : 0.9.0.0
2016-11-17 12:55:45  [ main:49851 ] - [ INFO ]  Kafka commitId : fc7243c2af4b2b4a
2016-11-17 12:55:57  [ main:61713 ] - [ INFO ]  No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.
2016-11-17 12:56:00  [ main:64662 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.AccountController.logout(java.lang.String)
2016-11-17 12:56:00  [ main:64662 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.login(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:56:00  [ main:64662 ] - [ INFO ]  Mapped "{[/account/profile],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getUserProfile()
2016-11-17 12:56:00  [ main:64662 ] - [ INFO ]  Mapped "{[/account/icon/{attachId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.attachHeaderIcon(java.lang.Long)
2016-11-17 12:56:00  [ main:64663 ] - [ INFO ]  Mapped "{[/account/profile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.updateUserProfile(tiger.web.api.form.user.AccountUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64663 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[GET],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForResetPass(java.lang.String)
2016-11-17 12:56:00  [ main:64663 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.verifyMsgCode(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64663 ] - [ INFO ]  Mapped "{[/account/password],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.resetPassword(tiger.web.api.form.user.ResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64664 ] - [ INFO ]  Mapped "{[/account/password],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changePassword(tiger.web.api.form.user.SimpleResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64664 ] - [ INFO ]  Mapped "{[/account/sms],methods=[GET],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForRegister(java.lang.String)
2016-11-17 12:56:00  [ main:64664 ] - [ INFO ]  Mapped "{[/account/sms],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.authMsgCodeForRegister(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64665 ] - [ INFO ]  Mapped "{[/account],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.signUp(tiger.web.api.form.user.AccountAddForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64665 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isMobileExist(java.lang.String)
2016-11-17 12:56:00  [ main:64665 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[scope=profile],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.readByMobile(java.lang.String)
2016-11-17 12:56:00  [ main:64665 ] - [ INFO ]  Mapped "{[/account/mobile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changeMobile(tiger.web.api.form.user.MobileChangeForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64665 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isValidToken(java.lang.String,java.lang.String)
2016-11-17 12:56:00  [ main:64666 ] - [ INFO ]  Mapped "{[/account/profile/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.updateAccountSetting(tiger.web.api.form.user.AccountLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64667 ] - [ INFO ]  Mapped "{[/account/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getAccountProfileById(java.lang.Long)
2016-11-17 12:56:00  [ main:64667 ] - [ INFO ]  Mapped "{[/account/profile/region],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.account.AccountController.getAccountRegion(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64669 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.listDomain.AccountSettingListDomain>> tiger.web.api.controller.account.AccountSettingController.getNotificationSetting()
2016-11-17 12:56:00  [ main:64670 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountSettingController.updateNotificationSetting(tiger.web.api.form.user.NotificationPushUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64672 ] - [ INFO ]  Mapped "{[/account/company],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.getUserCompany()
2016-11-17 12:56:00  [ main:64672 ] - [ INFO ]  Mapped "{[/account/company],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.updateUserCompany(tiger.web.api.form.company.CompanyForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64673 ] - [ INFO ]  Mapped "{[/test-redis],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.RedisTestController.read(java.lang.Long)
2016-11-17 12:56:00  [ main:64695 ] - [ INFO ]  Mapped "{[/social/url],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.String> tiger.web.api.controller.account.SocialAccountController.getRedirectUrl(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64697 ] - [ INFO ]  Mapped "{[/social/bind],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.bindSocial(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64697 ] - [ INFO ]  Mapped "{[/social/binds],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountBindDomain>> tiger.web.api.controller.account.SocialAccountController.binds()
2016-11-17 12:56:00  [ main:64697 ] - [ INFO ]  Mapped "{[/social/bind/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.deBind(java.lang.Long)
2016-11-17 12:56:00  [ main:64697 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountSocialAuthDomain> tiger.web.api.controller.account.SocialAccountController.thirdPartAuth(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:56:00  [ main:64697 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.SocialAccountController.bindThirdPartAccount(tiger.web.api.form.user.SocialBindForm,org.springframework.validation.BindingResult,int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:56:00  [ main:64698 ] - [ INFO ]  Mapped "{[/activity/activities],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.ActivityDomain>> tiger.web.api.controller.activity.ActivityController.allActivities(tiger.common.dal.query.ActivityQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64699 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=summary],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalSummaryListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalList(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64704 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=detail],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalListDetail(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64705 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getAttachById(long)
2016-11-17 12:56:00  [ main:64705 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[action=preview],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getPreviewAttachById(long,java.lang.String)
2016-11-17 12:56:00  [ main:64706 ] - [ INFO ]  Mapped "{[/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.createAttach(tiger.web.api.form.attach.AttachForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64706 ] - [ INFO ]  Mapped "{[/qiniuattach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object tiger.web.api.controller.attach.QiniuAttachController.qiniuCallBack(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,tiger.web.api.form.attach.QiniuAttachForm)
2016-11-17 12:56:00  [ main:64706 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.attach.QiniuAttachController.deleteAttachById(long)
2016-11-17 12:56:00  [ main:64707 ] - [ INFO ]  Mapped "{[/system/dict/{dictType}],methods=[GET],params=[scope=loan],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.DictController.getLoanDict(java.lang.String)
2016-11-17 12:56:00  [ main:64709 ] - [ INFO ]  Mapped "{[/social_auth],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.web.servlet.ModelAndView tiger.web.api.controller.base.IndexController.socialAuthRedirectUrl(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:56:00  [ main:64710 ] - [ INFO ]  Mapped "{[/system/dateTime],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Long> tiger.web.api.controller.base.SystemController.getSystemDateTime()
2016-11-17 12:56:00  [ main:64710 ] - [ INFO ]  Mapped "{[/system/systemparams],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.String>> tiger.web.api.controller.base.SystemController.getSystemParams(java.lang.String)
2016-11-17 12:56:00  [ main:64711 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.getCaptcha(javax.servlet.http.HttpServletResponse)
2016-11-17 12:56:00  [ main:64711 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.base.SystemController.verifyCaptcha(java.lang.String,java.lang.String)
2016-11-17 12:56:00  [ main:64711 ] - [ INFO ]  Mapped "{[/system/exception],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.collectException(tiger.web.api.form.system.ExceptionForm)
2016-11-17 12:56:00  [ main:64714 ] - [ INFO ]  Mapped "{[/customer],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.createCustomer(tiger.web.api.form.customer.CustomerCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64714 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.readCustomer(java.lang.Long)
2016-11-17 12:56:00  [ main:64715 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomer(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64715 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteCustomer(java.lang.Long)
2016-11-17 12:56:00  [ main:64715 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.listCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64715 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.listAllCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64716 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomer(java.lang.String,java.lang.Long)
2016-11-17 12:56:00  [ main:64716 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all && key=name],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomerByName(java.lang.String,java.lang.Long)
2016-11-17 12:56:00  [ main:64717 ] - [ INFO ]  Mapped "{[/customer/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.addAttach(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64719 ] - [ INFO ]  Mapped "{[/customer/{id}/attachs],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.customer.CustomerController.getAllAttachs(java.lang.Long)
2016-11-17 12:56:00  [ main:64719 ] - [ INFO ]  Mapped "{[/customer/{id}/attach/{aid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteAttach(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64719 ] - [ INFO ]  Mapped "{[/customer/{id}/loans],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.customer.CustomerController.listLoan(java.lang.Long,tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64720 ] - [ INFO ]  Mapped "{[/customer/{id}/smses],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.customer.CustomerController.listSmses(java.lang.Long,tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64720 ] - [ INFO ]  Mapped "{[/customer/{id}/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.listTags(java.lang.Long)
2016-11-17 12:56:00  [ main:64720 ] - [ INFO ]  Mapped "{[/customers/tag/{tid}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.addTags(java.lang.Long,tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64721 ] - [ INFO ]  Mapped "{[/customer/{id}/tag/{tid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.delTag(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64721 ] - [ INFO ]  Mapped "{[/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.getAllTags()
2016-11-17 12:56:00  [ main:64721 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getBirthdayCustomerCount()
2016-11-17 12:56:00  [ main:64722 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.util.List<tiger.core.domain.CustomerDomain>>> tiger.web.api.controller.customer.CustomerController.listBirthdayCustomers()
2016-11-17 12:56:00  [ main:64722 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getCustomerCount()
2016-11-17 12:56:00  [ main:64723 ] - [ INFO ]  Mapped "{[/customers],methods=[PUT],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.deleteCustomers(tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64724 ] - [ INFO ]  Mapped "{[/customer/{id}/icon/{iconId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomerIcon(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64724 ] - [ INFO ]  Mapped "{[/customer/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.assignCustomerById(java.lang.Long,tiger.web.api.form.customer.CustomerAssignmentForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64725 ] - [ INFO ]  Mapped "{[/customers/recentPayBackCustomers],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.getRecentPayBackCustoemrs(tiger.common.dal.query.RecentPayBackCustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64727 ] - [ INFO ]  Mapped "{[/feedback],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.FeedbackDomain> tiger.web.api.controller.feedback.FeedbackController.createFeedback(tiger.web.api.form.feedback.FeedbackCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64732 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[operation=createWithAll],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.create(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64733 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.createLoan(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64733 ] - [ INFO ]  Mapped "{[/loan/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.payItems(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64734 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=trash],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.trashLoan(java.lang.Long)
2016-11-17 12:56:00  [ main:64734 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[PUT],params=[operation=recover],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.recoverLoan(java.lang.Long)
2016-11-17 12:56:00  [ main:64734 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoan(java.lang.Long)
2016-11-17 12:56:00  [ main:64735 ] - [ INFO ]  Mapped "{[/loan/{id}/customer/{customerId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.loan.LoanController.relateLoaner(java.lang.Long,java.lang.Long,java.lang.String)
2016-11-17 12:56:00  [ main:64735 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn/{pawnId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relatePawn(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64736 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.getLoanById(java.lang.Long)
2016-11-17 12:56:00  [ main:64736 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanController.getLoanPawnById(java.lang.Long)
2016-11-17 12:56:00  [ main:64736 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<tiger.common.dal.enums.LoanCustomerTypeEnum, tiger.core.domain.CustomerDomain>> tiger.web.api.controller.loan.LoanController.getLoanLoanerById(java.lang.Long)
2016-11-17 12:56:00  [ main:64737 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.updateLoanLoanerById(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm)
2016-11-17 12:56:00  [ main:64737 ] - [ INFO ]  Mapped "{[/loan/{id}/records],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRefineDomain>> tiger.web.api.controller.loan.LoanController.getLoanRecordsById(java.lang.Long)
2016-11-17 12:56:00  [ main:64738 ] - [ INFO ]  Mapped "{[/loan/{id}/modifiedRecords],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.getModifiedLoanRecords(java.lang.Long)
2016-11-17 12:56:00  [ main:64738 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.loan.LoanController.queryLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64738 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanController.countLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64739 ] - [ INFO ]  Mapped "{[/loan/{id}/attaches],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.loan.LoanController.listLoanAttachments(java.lang.Long)
2016-11-17 12:56:00  [ main:64739 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relateLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64740 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64741 ] - [ INFO ]  Mapped "{[/loan/{id}/paymentSituation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.loan.LoanController.getLoanPaymentSituationById(java.lang.Long)
2016-11-17 12:56:00  [ main:64741 ] - [ INFO ]  Mapped "{[/loan/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.assignLoanById(java.lang.Long,tiger.web.api.form.loan.LoanAssignmentForm)
2016-11-17 12:56:00  [ main:64741 ] - [ INFO ]  Mapped "{[/loan/{id}/sms],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.loan.LoanNotificationController.getHistorySms(java.lang.Long)
2016-11-17 12:56:00  [ main:64742 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.getSmsSetting(java.lang.Long)
2016-11-17 12:56:00  [ main:64742 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.settingSms(java.lang.Long,tiger.web.api.form.loan.LoanSmsSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64743 ] - [ INFO ]  Mapped "{[/loan/pawn],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.createLoanPawn(tiger.web.api.form.loan.LoanPawnCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64743 ] - [ INFO ]  Mapped "{[/loan/pawn/{pawnId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.readByPawnId(long)
2016-11-17 12:56:00  [ main:64743 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.updateLoanPawn(long,tiger.web.api.form.loan.LoanPawnUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64744 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.addAttachToLoanPawn(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64744 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.deleteAttachFromLoanPawn(long,long)
2016-11-17 12:56:00  [ main:64746 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getAllPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64746 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getPagePayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64746 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanPayController.countPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64747 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanPayController.getLoanBill(long)
2016-11-17 12:56:00  [ main:64747 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[PUT],params=[operation=merge],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanMergedBillDomain> tiger.web.api.controller.loan.LoanPayController.getMergedBillByIds(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64747 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.payMergedBills(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64747 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[PUT],params=[operation=launch],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.launchLoan(long,long,java.util.Date)
2016-11-17 12:56:00  [ main:64747 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[GET],params=[operation=calculate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.trimLoanRecord(long,long,tiger.web.api.form.loan.LoanRecalForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64751 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.paySingleBill(long,long,tiger.web.api.form.loan.LoanSinglePayForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64751 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/cancellation],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.cancelLastPayback(long)
2016-11-17 12:56:00  [ main:64757 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.modifyLoanBill(tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult,java.lang.Long)
2016-11-17 12:56:00  [ main:64758 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayModifyController.deleteModification(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64758 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.updateModification(java.lang.Long,java.lang.Long,tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64758 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRefinementLimitDomain> tiger.web.api.controller.loan.LoanRefineController.getLoanRefinementLimit(long)
2016-11-17 12:56:00  [ main:64759 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanRefineController.refineLoan(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64759 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanRefineController.previewLoanRefinePayItems(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64764 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.getLoanTemplateById(long)
2016-11-17 12:56:00  [ main:64765 ] - [ INFO ]  Mapped "{[/loan/template],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.createLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64766 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.deleteLoanTemplate(long)
2016-11-17 12:56:00  [ main:64766 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.updateLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:56:00  [ main:64766 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.loanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:56:00  [ main:64766 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.allLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:56:00  [ main:64767 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanTemplateController.countLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:56:00  [ main:64767 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.awesomeProject(java.lang.Long)
2016-11-17 12:56:00  [ main:64768 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.collectProject(java.lang.Long)
2016-11-17 12:56:00  [ main:64768 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.deAwesomeProject(java.lang.Long)
2016-11-17 12:56:00  [ main:64768 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.deCollectProject(java.lang.Long)
2016-11-17 12:56:00  [ main:64768 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/sharing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.market.MarketProjectActionController.shareProject()
2016-11-17 12:56:00  [ main:64775 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.getById(java.lang.Long,java.lang.Long)
2016-11-17 12:56:00  [ main:64776 ] - [ INFO ]  Mapped "{[/market/project],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.createMarketProject(tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64776 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectController.deleteProject(java.lang.Long)
2016-11-17 12:56:00  [ main:64776 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.updateProject(java.lang.Long,tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64777 ] - [ INFO ]  Mapped "{[/market/projects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.queryProjects(tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-17 12:56:00  [ main:64777 ] - [ INFO ]  Mapped "{[/market/projects/userCollection/{account}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getUserCollectedProjects(java.lang.Long,tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-17 12:56:00  [ main:64777 ] - [ INFO ]  Mapped "{[/market/topAccounts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getTopAccounts(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64777 ] - [ INFO ]  Mapped "{[/market/latestProjects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getLatestProjects(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64778 ] - [ INFO ]  Mapped "{[/market/regions],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listAllRegions(tiger.common.dal.query.RegionQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64778 ] - [ INFO ]  Mapped "{[/market/region/support],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listSupportedRegions()
2016-11-17 12:56:00  [ main:64778 ] - [ INFO ]  Mapped "{[/market/region/support/QRCode],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.market.RegionController.listSupportedRegionQRCodes(java.lang.String)
2016-11-17 12:56:00  [ main:64779 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.MessageDomain> tiger.web.api.controller.message.MessageController.getMessageById(java.lang.Long)
2016-11-17 12:56:00  [ main:64779 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatusById(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:56:00  [ main:64779 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.deleteMessageById(java.lang.Long)
2016-11-17 12:56:00  [ main:64780 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.MessageDomain>> tiger.web.api.controller.message.MessageController.getPaginatedMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64780 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.message.MessageController.countObjectBaseResultMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64780 ] - [ INFO ]  Mapped "{[/messages],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatuses(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64780 ] - [ INFO ]  Mapped "{[/portal/ui],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.portal.PortalController.getPicture(java.lang.String)
2016-11-17 12:56:00  [ main:64794 ] - [ INFO ]  Mapped "{[/sms/verify],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendVerifyCode(tiger.web.api.form.sms.SmsVerifyForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64794 ] - [ INFO ]  Mapped "{[/sms],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.sms.SmsController.sendMsg(tiger.web.api.form.sms.SendSmsForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64795 ] - [ INFO ]  Mapped "{[/sms/templates],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getMsgTemplate()
2016-11-17 12:56:00  [ main:64795 ] - [ INFO ]  Mapped "{[/sms/history],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.sms.SmsController.showHistory(tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64795 ] - [ INFO ]  Mapped "{[/sms/history/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendAgain(long)
2016-11-17 12:56:00  [ main:64802 ] - [ INFO ]  Mapped "{[/sms/scheduler],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getallSheduler()
2016-11-17 12:56:00  [ main:64802 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.snedSheduler(java.lang.Long)
2016-11-17 12:56:00  [ main:64802 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.deleteSheduler(java.lang.Long)
2016-11-17 12:56:00  [ main:64813 ] - [ INFO ]  Mapped "{[/ucenter/help],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.addHelp(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64813 ] - [ INFO ]  Mapped "{[/ucenter/commonHelps],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.commonHelps()
2016-11-17 12:56:00  [ main:64813 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.allHelps(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64813 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.listHelps(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64813 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.getHelpById(long)
2016-11-17 12:56:00  [ main:64813 ] - [ INFO ]  Mapped "{[/ucenter/catalogs],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpCatalogDomain>> tiger.web.api.controller.ucenter.HelpController.allCatalogs()
2016-11-17 12:56:00  [ main:64813 ] - [ INFO ]  Mapped "{[/ucenter/catalog/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpCatalogDomain> tiger.web.api.controller.ucenter.HelpController.getCatalog(long)
2016-11-17 12:56:00  [ main:64814 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=help],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.searchHelp(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64814 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.updateHelpById(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:56:00  [ main:64814 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.deleteHelpById(long)
2016-11-17 12:56:00  [ main:64814 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}/common],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.commonHelpById(long,javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64815 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.allPosts()
2016-11-17 12:56:00  [ main:64816 ] - [ INFO ]  Mapped "{[/ucenter/post],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.addPost(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64816 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/reply],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.addReply(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,long)
2016-11-17 12:56:00  [ main:64816 ] - [ INFO ]  Mapped "{[/ucenter/stickyPosts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.stickyPosts()
2016-11-17 12:56:00  [ main:64816 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.listPosts(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64816 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.getPostById(java.lang.Long,java.lang.String)
2016-11-17 12:56:00  [ main:64816 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updatePostById(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:56:00  [ main:64816 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostById(long)
2016-11-17 12:56:00  [ main:64818 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.getAllReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-17 12:56:00  [ main:64819 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.listReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-17 12:56:00  [ main:64819 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.getPostReplyById(long)
2016-11-17 12:56:00  [ main:64819 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updateReplyById(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:56:00  [ main:64823 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostReplyById(long)
2016-11-17 12:56:00  [ main:64833 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=post],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.searchPost(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64834 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=reply],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.searchReply(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64834 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/stick],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.stickPostById(long,javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64835 ] - [ INFO ]  Mapped "{[/workspace],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.createGroupWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64835 ] - [ INFO ]  Mapped "{[/workspace],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64835 ] - [ INFO ]  Mapped "{[/workspace],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.deleteGroupWorkspace()
2016-11-17 12:56:00  [ main:64836 ] - [ INFO ]  Mapped "{[/workspace/transfer/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.transferGroupWorkspace(java.lang.Long)
2016-11-17 12:56:00  [ main:64836 ] - [ INFO ]  Mapped "{[/workspace/setting/loan],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspaceLoanSetting(tiger.web.api.form.workspace.WorkspaceLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64836 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.getWorkspace(java.lang.Long)
2016-11-17 12:56:00  [ main:64836 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.quitWorkspace(java.lang.Long)
2016-11-17 12:56:00  [ main:64836 ] - [ INFO ]  Mapped "{[/workspace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.checkCreateWorkspaceAbility()
2016-11-17 12:56:00  [ main:64846 ] - [ INFO ]  Mapped "{[/workspace/member/invitation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.generateInvitation()
2016-11-17 12:56:00  [ main:64846 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/joinByCode],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.workspace.WorkspaceMemberController.joinWorkspaceByInvitationCode(java.lang.String)
2016-11-17 12:56:00  [ main:64846 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getInvitationInfo(java.lang.String)
2016-11-17 12:56:00  [ main:64847 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceMemberDetailDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getWorkspaceMember(java.lang.Long)
2016-11-17 12:56:00  [ main:64847 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.addWorkspaceMember(java.lang.Long)
2016-11-17 12:56:00  [ main:64847 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.deleteWorkspaceMember(java.lang.Long)
2016-11-17 12:56:00  [ main:64848 ] - [ INFO ]  Mapped "{[/workspace/member/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.AccountWorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getUserAuthInWorkspace()
2016-11-17 12:56:00  [ main:64848 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}/role],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.updateWorkspaceRoles(java.lang.Long,tiger.web.api.form.workspace.WorkspaceRoleUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64848 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationsOfWorkspace()
2016-11-17 12:56:00  [ main:64848 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberVerifyDomain>> tiger.web.api.controller.workspace.WorkspaceMemberController.getVerificationsOfWorkspace(tiger.common.dal.query.WorkspaceVerifyQuery,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64848 ] - [ INFO ]  Mapped "{[/workspace/member/verification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationOfWorkspace(tiger.web.api.form.workspace.WorkspaceVerifyForm,org.springframework.validation.BindingResult)
2016-11-17 12:56:00  [ main:64850 ] - [ INFO ]  Mapped "{[/workspaces],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaces()
2016-11-17 12:56:00  [ main:64851 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberListDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceMembers()
2016-11-17 12:56:00  [ main:64851 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceSearchController.countWorkspaceMembers()
2016-11-17 12:56:00  [ main:64851 ] - [ INFO ]  Mapped "{[/workspace/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.common.dal.enums.RoleEnum>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceRoles()
2016-11-17 12:56:00  [ main:64869 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:00  [ main:64869 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[text/html],custom=[]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest)
2016-11-17 12:56:01  [ main:66129 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2016-11-17 12:56:03  [ main:67731 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3754a4bf: startup date [Thu Nov 17 12:54:56 CST 2016]; root of context hierarchy
2016-11-17 12:56:07  [ main:72211 ] - [ INFO ]  Initializing EhCache CacheManager
2016-11-17 12:56:19  [ main:83648 ] - [ INFO ]  Mapped "{[/beans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83651 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2016-11-17 12:56:19  [ main:83651 ] - [ INFO ]  Mapped "{[/metrics],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83652 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2016-11-17 12:56:19  [ main:83652 ] - [ INFO ]  Mapped "{[/env],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83652 ] - [ INFO ]  Mapped "{[/shutdown],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2016-11-17 12:56:19  [ main:83652 ] - [ INFO ]  Mapped "{[/mappings],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83652 ] - [ INFO ]  Mapped "{[/autoconfig],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83653 ] - [ INFO ]  Mapped "{[/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83653 ] - [ INFO ]  Mapped "{[/trace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83653 ] - [ INFO ]  Mapped "{[/configprops],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:19  [ main:83653 ] - [ INFO ]  Mapped "{[/health],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2016-11-17 12:56:19  [ main:83653 ] - [ INFO ]  Mapped "{[/dump],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:56:20  [ main:84758 ] - [ INFO ]  

Using default security password: 4262b232-bcf1-4a99-9070-47327cf405f1

2016-11-17 12:56:20  [ main:85219 ] - [ INFO ]  Creating filter chain: Ant [pattern='/css/**'], []
2016-11-17 12:56:20  [ main:85219 ] - [ INFO ]  Creating filter chain: Ant [pattern='/js/**'], []
2016-11-17 12:56:20  [ main:85219 ] - [ INFO ]  Creating filter chain: Ant [pattern='/images/**'], []
2016-11-17 12:56:20  [ main:85219 ] - [ INFO ]  Creating filter chain: Ant [pattern='/**/favicon.ico'], []
2016-11-17 12:56:20  [ main:85219 ] - [ INFO ]  Creating filter chain: Ant [pattern='/error'], []
2016-11-17 12:56:21  [ main:85767 ] - [ INFO ]  Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15280370, org.springframework.security.web.context.SecurityContextPersistenceFilter@79c421c, org.springframework.security.web.header.HeaderWriterFilter@6ca6f94c, org.springframework.web.filter.CharacterEncodingFilter@7032e80e, org.springframework.security.web.authentication.logout.LogoutFilter@70a03aa6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ff31f6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4173cb17, tiger.web.api.SecurityConfig$SecurityContextAuthenticationFilter@786f0df5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29185b54, org.springframework.security.web.session.SessionManagementFilter@19603da0, org.springframework.security.web.access.ExceptionTranslationFilter@356a99a2]
2016-11-17 12:56:22  [ main:86457 ] - [ INFO ]  Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/info'], Ant [pattern='/info/**'], Ant [pattern='/info.*'], Ant [pattern='/health'], Ant [pattern='/health/**'], Ant [pattern='/health.*'], Ant [pattern='/beans'], Ant [pattern='/beans/**'], Ant [pattern='/beans.*'], Ant [pattern='/metrics'], Ant [pattern='/metrics/**'], Ant [pattern='/metrics.*'], Ant [pattern='/env'], Ant [pattern='/env/**'], Ant [pattern='/env.*'], Ant [pattern='/shutdown'], Ant [pattern='/shutdown/**'], Ant [pattern='/shutdown.*'], Ant [pattern='/mappings'], Ant [pattern='/mappings/**'], Ant [pattern='/mappings.*'], Ant [pattern='/autoconfig'], Ant [pattern='/autoconfig/**'], Ant [pattern='/autoconfig.*'], Ant [pattern='/trace'], Ant [pattern='/trace/**'], Ant [pattern='/trace.*'], Ant [pattern='/configprops'], Ant [pattern='/configprops/**'], Ant [pattern='/configprops.*'], Ant [pattern='/dump'], Ant [pattern='/dump/**'], Ant [pattern='/dump.*']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@351e5043, org.springframework.security.web.context.SecurityContextPersistenceFilter@3974234e, org.springframework.security.web.header.HeaderWriterFilter@351e16c, org.springframework.security.web.authentication.logout.LogoutFilter@4010ad81, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1720c3b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76bbb392, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a6d66a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@768caa07, org.springframework.security.web.session.SessionManagementFilter@5f9cab77, org.springframework.security.web.access.ExceptionTranslationFilter@367f3fe5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7460e9c9]
2016-11-17 12:56:37  [ main:101457 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2016-11-17 12:56:45  [ main:109782 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-17 12:56:45  [ main:109793 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-17 12:56:45  [ main:109802 ] - [ INFO ]  Starting beans in phase 0
2016-11-17 12:56:45  [ main:109810 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2016-11-17 12:56:45  [ main:109858 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2016-11-17 12:56:45  [ main:109875 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2016-11-17 12:56:45  [ main:109883 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2016-11-17 12:56:45  [ main:109895 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2016-11-17 12:56:45  [ main:109903 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2016-11-17 12:56:45  [ main:109912 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2016-11-17 12:56:45  [ main:109917 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2016-11-17 12:56:45  [ main:109983 ] - [ INFO ]  Located managed bean 'autoConfigurationAuditEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationAuditEndpoint]
2016-11-17 12:56:45  [ main:109993 ] - [ INFO ]  Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2016-11-17 12:56:45  [ main:110022 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2016-11-17 12:56:46  [ main:110340 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@2efddbd7 testClass = AccountControllerTests, testInstance = tiger.web.api.account.AccountControllerTests@22283722, testMethod = testSignUp@AccountControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64234cee testClass = AccountControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4f8b87bc]; rollback [true]
2016-11-17 12:56:46  [ main:110343 ] - [ INFO ]  测试启动
2016-11-17 12:56:46  [ main:110354 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-17 12:56:46  [ main:110354 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-17 12:56:46  [ main:110595 ] - [ INFO ]  FrameworkServlet '': initialization completed in 241 ms
2016-11-17 12:57:46  [ main:171029 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_
2016-11-17 12:57:46  [ main:171038 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_
2016-11-17 12:57:46  [ main:171121 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_0
2016-11-17 12:57:46  [ main:171159 ] - [ INFO ]  测试关闭
2016-11-17 12:57:46  [ main:171213 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@2efddbd7 testClass = AccountControllerTests, testInstance = tiger.web.api.account.AccountControllerTests@22283722, testMethod = testSignUp@AccountControllerTests, testException = com.jayway.jsonpath.PathNotFoundException: Property ['id'] not found in path $['data'], mergedContextConfiguration = [WebMergedContextConfiguration@64234cee testClass = AccountControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-17 12:57:46  [ Thread-9:171237 ] - [ INFO ]  Closing org.springframework.web.context.support.GenericWebApplicationContext@3754a4bf: startup date [Thu Nov 17 12:54:56 CST 2016]; root of context hierarchy
2016-11-17 12:57:46  [ Thread-9:171252 ] - [ INFO ]  Stopping beans in phase 0
2016-11-17 12:57:46  [ Thread-9:171266 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-17 12:57:46  [ Thread-9:171269 ] - [ INFO ]  Unregistering JMX-exposed beans
2016-11-17 12:57:46  [ Thread-9:171272 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-17 12:57:46  [ Thread-9:171287 ] - [ INFO ]  Shutting down EhCache CacheManager
2016-11-17 12:57:46  [ Thread-9:171325 ] - [ INFO ]  Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2016-11-17 12:57:47  [ Thread-9:171338 ] - [ INFO ]  Closing JPA EntityManagerFactory for persistence unit 'default'
2016-11-17 12:58:28  [ main:0 ] - [ INFO ]  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-11-17 12:58:28  [ main:129 ] - [ INFO ]  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@564fabc8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@16d04d3d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@49ec71f8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1d2adfbe, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@36902638]
2016-11-17 12:58:29  [ main:989 ] - [ INFO ]  Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3754a4bf: startup date [Thu Nov 17 12:58:29 CST 2016]; root of context hierarchy
2016-11-17 12:58:38  [ main:10130 ] - [ INFO ]  Overriding bean definition for bean 'cacheManager': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/AppConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/ShiroConfig.class]]
2016-11-17 12:58:40  [ main:12591 ] - [ INFO ]  Bean 'shiroConfig' of type [class tiger.web.api.ShiroConfig$$EnhancerBySpringCGLIB$$6757343a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:40  [ main:12887 ] - [ INFO ]  HV000001: Hibernate Validator 5.1.3.Final
2016-11-17 12:58:41  [ main:13255 ] - [ INFO ]  Bean 'org.springframework.scheduling.annotation.SchedulingConfiguration' of type [class org.springframework.scheduling.annotation.SchedulingConfiguration$$EnhancerBySpringCGLIB$$a823463a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:43  [ main:15716 ] - [ INFO ]  Bean 'cacheManager' of type [class org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:43  [ main:15721 ] - [ INFO ]  Cache with name 'tiger.web.api.ShiroRealm.authorizationCache' does not yet exist.  Creating now.
2016-11-17 12:58:43  [ main:15733 ] - [ INFO ]  Added EhCache named [tiger.web.api.ShiroRealm.authorizationCache]
2016-11-17 12:58:43  [ main:15787 ] - [ INFO ]  Bean 'myRealm' of type [class tiger.web.api.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:43  [ main:15851 ] - [ INFO ]  Bean 'securityManager' of type [class org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:44  [ main:15979 ] - [ INFO ]  Bean 'dataConfig' of type [class tiger.common.dal.DataConfig$$EnhancerBySpringCGLIB$$8dee50c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:44  [ main:16067 ] - [ INFO ]  MLog clients using log4j logging.
2016-11-17 12:58:44  [ main:16349 ] - [ INFO ]  Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2016-11-17 12:58:44  [ main:16667 ] - [ INFO ]  Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:46  [ main:18367 ] - [ INFO ]  Bean 'sqlSessionFactory' of type [class org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:47  [ main:19111 ] - [ INFO ]  Bean 'workspaceVerifyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:47  [ main:19282 ] - [ INFO ]  Bean 'workspaceMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:47  [ main:19473 ] - [ INFO ]  Bean 'ucenterPostReplyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:47  [ main:19574 ] - [ INFO ]  Bean 'ucenterPostMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:47  [ main:19778 ] - [ INFO ]  Bean 'ucenterHelpMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:47  [ main:19859 ] - [ INFO ]  Bean 'ucenterHelpCatalogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:47  [ main:19917 ] - [ INFO ]  Bean 'tagMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20039 ] - [ INFO ]  Bean 'systemParamsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20104 ] - [ INFO ]  Bean 'statisticsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20165 ] - [ INFO ]  Bean 'staffMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20275 ] - [ INFO ]  Bean 'smsVerifyCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20339 ] - [ INFO ]  Bean 'roleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20433 ] - [ INFO ]  Bean 'regionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20521 ] - [ INFO ]  Bean 'portalUIMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20557 ] - [ INFO ]  Bean 'permissionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20641 ] - [ INFO ]  Bean 'paymentRefundMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20695 ] - [ INFO ]  Bean 'paymentOrderObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20840 ] - [ INFO ]  Bean 'paymentOrderMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:48  [ main:20926 ] - [ INFO ]  Bean 'paymentObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:20986 ] - [ INFO ]  Bean 'msgTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21039 ] - [ INFO ]  Bean 'msgTplCatgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21144 ] - [ INFO ]  Bean 'messageMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21263 ] - [ INFO ]  Bean 'marketProjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21346 ] - [ INFO ]  Bean 'loanTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21444 ] - [ INFO ]  Bean 'loanSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21500 ] - [ INFO ]  Bean 'loanRefineMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21685 ] - [ INFO ]  Bean 'loanRecordMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21757 ] - [ INFO ]  Bean 'loanRecordItemsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21842 ] - [ INFO ]  Bean 'loanPawnParamMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:49  [ main:21934 ] - [ INFO ]  Bean 'loanPawnMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22038 ] - [ INFO ]  Bean 'loanMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22124 ] - [ INFO ]  Bean 'loanCustomerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22255 ] - [ INFO ]  Bean 'invitationCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22345 ] - [ INFO ]  Bean 'feedbackMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22436 ] - [ INFO ]  Bean 'customerMsgScheduleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22530 ] - [ INFO ]  Bean 'customerMsgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22662 ] - [ INFO ]  Bean 'customerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22726 ] - [ INFO ]  Bean 'companyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22787 ] - [ INFO ]  Bean 'attachRelateMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:50  [ main:22902 ] - [ INFO ]  Bean 'attachMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:51  [ main:22965 ] - [ INFO ]  Bean 'activityMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:51  [ main:23064 ] - [ INFO ]  Bean 'accountSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:51  [ main:23178 ] - [ INFO ]  Bean 'accountMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:51  [ main:23242 ] - [ INFO ]  Bean 'accountLoginLogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:51  [ main:23325 ] - [ INFO ]  Bean 'accountBindMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:51  [ main:23910 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$37cdc31f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:53  [ main:25394 ] - [ INFO ]  Bean 'transactionAttributeSource' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:53  [ main:25551 ] - [ INFO ]  Bean 'transactionInterceptor' of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:53  [ main:25579 ] - [ INFO ]  Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 12:58:55  [ main:27846 ] - [ INFO ]  Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1ic9kv98pjv16ego0y|11e9ac24, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1ic9kv98pjv16ego0y|11e9ac24, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://139.196.30.98:3306/tiger?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 28800, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 5, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2016-11-17 12:58:57  [ main:29530 ] - [ INFO ]  Building JPA container EntityManagerFactory for persistence unit 'default'
2016-11-17 12:58:57  [ main:29573 ] - [ INFO ]  HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2016-11-17 12:58:57  [ main:29800 ] - [ INFO ]  HHH000412: Hibernate Core {4.3.8.Final}
2016-11-17 12:58:57  [ main:29821 ] - [ INFO ]  HHH000206: hibernate.properties not found
2016-11-17 12:58:57  [ main:29824 ] - [ INFO ]  HHH000021: Bytecode provider name : javassist
2016-11-17 12:58:58  [ main:30542 ] - [ INFO ]  HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2016-11-17 12:58:58  [ main:30838 ] - [ INFO ]  HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2016-11-17 12:58:58  [ main:30867 ] - [ INFO ]  HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-11-17 12:58:59  [ main:31037 ] - [ INFO ]  HHH000397: Using ASTQueryTranslatorFactory
2016-11-17 12:59:15  [ main:47372 ] - [ INFO ]  ProducerConfig values: 
	compression.type = none
	metric.reporters = []
	metadata.max.age.ms = 300000
	metadata.fetch.timeout.ms = 60000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [localhost:9092]
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	max.block.ms = 60000
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	ssl.truststore.password = null
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	client.id = 
	ssl.endpoint.identification.algorithm = null
	ssl.protocol = TLS
	request.timeout.ms = 30000
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	acks = all
	batch.size = 16384
	ssl.keystore.location = null
	receive.buffer.bytes = 32768
	ssl.cipher.suites = null
	ssl.truststore.type = JKS
	security.protocol = PLAINTEXT
	retries = 0
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.truststore.location = null
	ssl.keystore.password = null
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	send.buffer.bytes = 131072
	linger.ms = 1

2016-11-17 12:59:15  [ main:47471 ] - [ INFO ]  Kafka version : 0.9.0.0
2016-11-17 12:59:15  [ main:47471 ] - [ INFO ]  Kafka commitId : fc7243c2af4b2b4a
2016-11-17 12:59:26  [ main:58924 ] - [ INFO ]  No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.
2016-11-17 12:59:29  [ main:61592 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.AccountController.logout(java.lang.String)
2016-11-17 12:59:29  [ main:61592 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.login(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:59:29  [ main:61592 ] - [ INFO ]  Mapped "{[/account/profile],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getUserProfile()
2016-11-17 12:59:29  [ main:61593 ] - [ INFO ]  Mapped "{[/account/icon/{attachId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.attachHeaderIcon(java.lang.Long)
2016-11-17 12:59:29  [ main:61593 ] - [ INFO ]  Mapped "{[/account/profile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.updateUserProfile(tiger.web.api.form.user.AccountUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61593 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[GET],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForResetPass(java.lang.String)
2016-11-17 12:59:29  [ main:61593 ] - [ INFO ]  Mapped "{[/account/password/sms],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.verifyMsgCode(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61593 ] - [ INFO ]  Mapped "{[/account/password],methods=[POST],params=[operation=reset],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.resetPassword(tiger.web.api.form.user.ResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61593 ] - [ INFO ]  Mapped "{[/account/password],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changePassword(tiger.web.api.form.user.SimpleResetPasswordForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61594 ] - [ INFO ]  Mapped "{[/account/sms],methods=[GET],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.getMsgCodeForRegister(java.lang.String)
2016-11-17 12:59:29  [ main:61594 ] - [ INFO ]  Mapped "{[/account/sms],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.authMsgCodeForRegister(tiger.web.api.form.user.MobileAndCode,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61594 ] - [ INFO ]  Mapped "{[/account],methods=[POST],params=[operation=register],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.signUp(tiger.web.api.form.user.AccountAddForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61594 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isMobileExist(java.lang.String)
2016-11-17 12:59:29  [ main:61594 ] - [ INFO ]  Mapped "{[/account/mobile/{mobile}],methods=[GET],params=[scope=profile],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.account.AccountController.readByMobile(java.lang.String)
2016-11-17 12:59:29  [ main:61594 ] - [ INFO ]  Mapped "{[/account/mobile],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.changeMobile(tiger.web.api.form.user.MobileChangeForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61594 ] - [ INFO ]  Mapped "{[/account/authentication],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountController.isValidToken(java.lang.String,java.lang.String)
2016-11-17 12:59:29  [ main:61595 ] - [ INFO ]  Mapped "{[/account/profile/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.updateAccountSetting(tiger.web.api.form.user.AccountLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61595 ] - [ INFO ]  Mapped "{[/account/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.AccountController.getAccountProfileById(java.lang.Long)
2016-11-17 12:59:29  [ main:61595 ] - [ INFO ]  Mapped "{[/account/profile/region],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.account.AccountController.getAccountRegion(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61600 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.listDomain.AccountSettingListDomain>> tiger.web.api.controller.account.AccountSettingController.getNotificationSetting()
2016-11-17 12:59:29  [ main:61600 ] - [ INFO ]  Mapped "{[/account/setting/notification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.account.AccountSettingController.updateNotificationSetting(tiger.web.api.form.user.NotificationPushUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61601 ] - [ INFO ]  Mapped "{[/account/company],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.getUserCompany()
2016-11-17 12:59:29  [ main:61601 ] - [ INFO ]  Mapped "{[/account/company],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.CompanyController.updateUserCompany(tiger.web.api.form.company.CompanyForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61608 ] - [ INFO ]  Mapped "{[/test-redis],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.RedisTestController.read(java.lang.Long)
2016-11-17 12:59:29  [ main:61616 ] - [ INFO ]  Mapped "{[/social/binds],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountBindDomain>> tiger.web.api.controller.account.SocialAccountController.binds()
2016-11-17 12:59:29  [ main:61616 ] - [ INFO ]  Mapped "{[/social/bind/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.deBind(java.lang.Long)
2016-11-17 12:59:29  [ main:61617 ] - [ INFO ]  Mapped "{[/social/url],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.String> tiger.web.api.controller.account.SocialAccountController.getRedirectUrl(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61618 ] - [ INFO ]  Mapped "{[/social/bind],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.account.SocialAccountController.bindSocial(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61618 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountSocialAuthDomain> tiger.web.api.controller.account.SocialAccountController.thirdPartAuth(tiger.web.api.form.user.SocialAuthForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:59:29  [ main:61619 ] - [ INFO ]  Mapped "{[/social/authentication],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.AccountDomain> tiger.web.api.controller.account.SocialAccountController.bindThirdPartAccount(tiger.web.api.form.user.SocialBindForm,org.springframework.validation.BindingResult,int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:59:29  [ main:61620 ] - [ INFO ]  Mapped "{[/activity/activities],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.ActivityDomain>> tiger.web.api.controller.activity.ActivityController.allActivities(tiger.common.dal.query.ActivityQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61622 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=detail],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalListDetail(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61622 ] - [ INFO ]  Mapped "{[/analysis/fiscals],methods=[GET],params=[scope=summary],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanFiscalSummaryListDomain> tiger.web.api.controller.analysis.FiscalController.getFiscalList(tiger.common.dal.query.LoanFiscalQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61623 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getAttachById(long)
2016-11-17 12:59:29  [ main:61624 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[GET],params=[action=preview],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.getPreviewAttachById(long,java.lang.String)
2016-11-17 12:59:29  [ main:61624 ] - [ INFO ]  Mapped "{[/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.attach.QiniuAttachController.createAttach(tiger.web.api.form.attach.AttachForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61624 ] - [ INFO ]  Mapped "{[/qiniuattach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object tiger.web.api.controller.attach.QiniuAttachController.qiniuCallBack(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,tiger.web.api.form.attach.QiniuAttachForm)
2016-11-17 12:59:29  [ main:61624 ] - [ INFO ]  Mapped "{[/attach/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.attach.QiniuAttachController.deleteAttachById(long)
2016-11-17 12:59:29  [ main:61628 ] - [ INFO ]  Mapped "{[/system/dict/{dictType}],methods=[GET],params=[scope=loan],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.DictController.getLoanDict(java.lang.String)
2016-11-17 12:59:29  [ main:61628 ] - [ INFO ]  Mapped "{[/social_auth],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.web.servlet.ModelAndView tiger.web.api.controller.base.IndexController.socialAuthRedirectUrl(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-11-17 12:59:29  [ main:61629 ] - [ INFO ]  Mapped "{[/system/dateTime],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Long> tiger.web.api.controller.base.SystemController.getSystemDateTime()
2016-11-17 12:59:29  [ main:61629 ] - [ INFO ]  Mapped "{[/system/systemparams],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.String>> tiger.web.api.controller.base.SystemController.getSystemParams(java.lang.String)
2016-11-17 12:59:29  [ main:61630 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.getCaptcha(javax.servlet.http.HttpServletResponse)
2016-11-17 12:59:29  [ main:61630 ] - [ INFO ]  Mapped "{[/system/captcha],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.base.SystemController.verifyCaptcha(java.lang.String,java.lang.String)
2016-11-17 12:59:29  [ main:61630 ] - [ INFO ]  Mapped "{[/system/exception],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.base.SystemController.collectException(tiger.web.api.form.system.ExceptionForm)
2016-11-17 12:59:29  [ main:61635 ] - [ INFO ]  Mapped "{[/customer],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.createCustomer(tiger.web.api.form.customer.CustomerCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61637 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.CustomerDomain> tiger.web.api.controller.customer.CustomerController.readCustomer(java.lang.Long)
2016-11-17 12:59:29  [ main:61638 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomer(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61639 ] - [ INFO ]  Mapped "{[/customer/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteCustomer(java.lang.Long)
2016-11-17 12:59:29  [ main:61640 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.listCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61640 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.listAllCustomer(tiger.common.dal.query.CustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61640 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomer(java.lang.String,java.lang.Long)
2016-11-17 12:59:29  [ main:61641 ] - [ INFO ]  Mapped "{[/customers/search],methods=[GET],params=[scope=all && key=name],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.searchCustomerByName(java.lang.String,java.lang.Long)
2016-11-17 12:59:29  [ main:61641 ] - [ INFO ]  Mapped "{[/customer/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.addAttach(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61641 ] - [ INFO ]  Mapped "{[/customer/{id}/attachs],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.customer.CustomerController.getAllAttachs(java.lang.Long)
2016-11-17 12:59:29  [ main:61641 ] - [ INFO ]  Mapped "{[/customer/{id}/attach/{aid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.deleteAttach(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61641 ] - [ INFO ]  Mapped "{[/customer/{id}/loans],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.customer.CustomerController.listLoan(java.lang.Long,tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61642 ] - [ INFO ]  Mapped "{[/customer/{id}/smses],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.customer.CustomerController.listSmses(java.lang.Long,tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61642 ] - [ INFO ]  Mapped "{[/customer/{id}/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.listTags(java.lang.Long)
2016-11-17 12:59:29  [ main:61642 ] - [ INFO ]  Mapped "{[/customers/tag/{tid}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.addTags(java.lang.Long,tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61642 ] - [ INFO ]  Mapped "{[/customer/{id}/tag/{tid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.delTag(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61642 ] - [ INFO ]  Mapped "{[/tags],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.TagDomain>> tiger.web.api.controller.customer.CustomerController.getAllTags()
2016-11-17 12:59:29  [ main:61642 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getBirthdayCustomerCount()
2016-11-17 12:59:29  [ main:61642 ] - [ INFO ]  Mapped "{[/customer/birthday],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.util.List<tiger.core.domain.CustomerDomain>>> tiger.web.api.controller.customer.CustomerController.listBirthdayCustomers()
2016-11-17 12:59:29  [ main:61643 ] - [ INFO ]  Mapped "{[/customers],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.customer.CustomerController.getCustomerCount()
2016-11-17 12:59:29  [ main:61643 ] - [ INFO ]  Mapped "{[/customers],methods=[PUT],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.customer.CustomerController.deleteCustomers(tiger.web.api.form.customer.CustomerListForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61643 ] - [ INFO ]  Mapped "{[/customer/{id}/icon/{iconId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.updateCustomerIcon(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61646 ] - [ INFO ]  Mapped "{[/customer/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.customer.CustomerController.assignCustomerById(java.lang.Long,tiger.web.api.form.customer.CustomerAssignmentForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61646 ] - [ INFO ]  Mapped "{[/customers/recentPayBackCustomers],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerDomain>> tiger.web.api.controller.customer.CustomerController.getRecentPayBackCustoemrs(tiger.common.dal.query.RecentPayBackCustomerQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61647 ] - [ INFO ]  Mapped "{[/feedback],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.FeedbackDomain> tiger.web.api.controller.feedback.FeedbackController.createFeedback(tiger.web.api.form.feedback.FeedbackCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61649 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[operation=createWithAll],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.create(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61650 ] - [ INFO ]  Mapped "{[/loan/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.payItems(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61650 ] - [ INFO ]  Mapped "{[/loan],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.createLoan(tiger.web.api.form.loan.LoanCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61652 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=trash],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.trashLoan(java.lang.Long)
2016-11-17 12:59:29  [ main:61652 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[PUT],params=[operation=recover],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.recoverLoan(java.lang.Long)
2016-11-17 12:59:29  [ main:61653 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[DELETE],params=[operation=delete],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoan(java.lang.Long)
2016-11-17 12:59:29  [ main:61654 ] - [ INFO ]  Mapped "{[/loan/{id}/customer/{customerId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.loan.LoanController.relateLoaner(java.lang.Long,java.lang.Long,java.lang.String)
2016-11-17 12:59:29  [ main:61654 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn/{pawnId}],methods=[PUT],params=[operation=relate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relatePawn(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61654 ] - [ INFO ]  Mapped "{[/loan/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanDomain> tiger.web.api.controller.loan.LoanController.getLoanById(java.lang.Long)
2016-11-17 12:59:29  [ main:61654 ] - [ INFO ]  Mapped "{[/loan/{id}/pawn],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanController.getLoanPawnById(java.lang.Long)
2016-11-17 12:59:29  [ main:61655 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<tiger.common.dal.enums.LoanCustomerTypeEnum, tiger.core.domain.CustomerDomain>> tiger.web.api.controller.loan.LoanController.getLoanLoanerById(java.lang.Long)
2016-11-17 12:59:29  [ main:61655 ] - [ INFO ]  Mapped "{[/loan/{id}/loaner],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.updateLoanLoanerById(java.lang.Long,tiger.web.api.form.customer.CustomerUpdateForm)
2016-11-17 12:59:29  [ main:61655 ] - [ INFO ]  Mapped "{[/loan/{id}/records],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRefineDomain>> tiger.web.api.controller.loan.LoanController.getLoanRecordsById(java.lang.Long)
2016-11-17 12:59:29  [ main:61656 ] - [ INFO ]  Mapped "{[/loan/{id}/modifiedRecords],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanController.getModifiedLoanRecords(java.lang.Long)
2016-11-17 12:59:29  [ main:61656 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanDomain>> tiger.web.api.controller.loan.LoanController.queryLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61657 ] - [ INFO ]  Mapped "{[/loans],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanController.countLoan(tiger.common.dal.query.LoanQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61658 ] - [ INFO ]  Mapped "{[/loan/{id}/attaches],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AttachDomain>> tiger.web.api.controller.loan.LoanController.listLoanAttachments(java.lang.Long)
2016-11-17 12:59:29  [ main:61658 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.relateLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61658 ] - [ INFO ]  Mapped "{[/loan/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.deleteLoanAttachments(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61658 ] - [ INFO ]  Mapped "{[/loan/{id}/paymentSituation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.Map<java.lang.String, java.lang.Integer>> tiger.web.api.controller.loan.LoanController.getLoanPaymentSituationById(java.lang.Long)
2016-11-17 12:59:29  [ main:61658 ] - [ INFO ]  Mapped "{[/loan/{id}/assignment],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanController.assignLoanById(java.lang.Long,tiger.web.api.form.loan.LoanAssignmentForm)
2016-11-17 12:59:29  [ main:61659 ] - [ INFO ]  Mapped "{[/loan/{id}/sms],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.CustomerMsgDomain>> tiger.web.api.controller.loan.LoanNotificationController.getHistorySms(java.lang.Long)
2016-11-17 12:59:29  [ main:61659 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.getSmsSetting(java.lang.Long)
2016-11-17 12:59:29  [ main:61659 ] - [ INFO ]  Mapped "{[/loan/{id}/sms/setting],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanSmsSettingDomain> tiger.web.api.controller.loan.LoanNotificationController.settingSms(java.lang.Long,tiger.web.api.form.loan.LoanSmsSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61660 ] - [ INFO ]  Mapped "{[/loan/pawn],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.createLoanPawn(tiger.web.api.form.loan.LoanPawnCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61661 ] - [ INFO ]  Mapped "{[/loan/pawn/{pawnId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanPawnDomain> tiger.web.api.controller.loan.LoanPawnController.readByPawnId(long)
2016-11-17 12:59:29  [ main:61661 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.updateLoanPawn(long,tiger.web.api.form.loan.LoanPawnUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61661 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.addAttachToLoanPawn(long,tiger.web.api.form.attach.AttachRelateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61661 ] - [ INFO ]  Mapped "{[/loan/pawn/{id}/attach/{attachId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPawnController.deleteAttachFromLoanPawn(long,long)
2016-11-17 12:59:29  [ main:61665 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getAllPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61665 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanPaybackListDomain>> tiger.web.api.controller.loan.LoanPayController.getPagePayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61666 ] - [ INFO ]  Mapped "{[/loan/paybacks],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanPayController.countPayBacks(tiger.common.dal.query.LoanPaybackQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61667 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanPayController.getLoanBill(long)
2016-11-17 12:59:29  [ main:61668 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[PUT],params=[operation=merge],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanMergedBillDomain> tiger.web.api.controller.loan.LoanPayController.getMergedBillByIds(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61668 ] - [ INFO ]  Mapped "{[/loan/{id}/bills],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.payMergedBills(long,tiger.common.dal.query.LoanMergeBillQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61668 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[PUT],params=[operation=launch],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.launchLoan(long,long,java.util.Date)
2016-11-17 12:59:29  [ main:61668 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[GET],params=[operation=calculate],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.trimLoanRecord(long,long,tiger.web.api.form.loan.LoanRecalForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61669 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/{billId}],methods=[POST],params=[operation=pay],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayController.paySingleBill(long,long,tiger.web.api.form.loan.LoanSinglePayForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61669 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/cancellation],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayController.cancelLastPayback(long)
2016-11-17 12:59:29  [ main:61670 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.modifyLoanBill(tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult,java.lang.Long)
2016-11-17 12:59:29  [ main:61670 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanPayModifyController.deleteModification(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61671 ] - [ INFO ]  Mapped "{[/loan/{id}/bill/modification/{modificationId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRecordDomain> tiger.web.api.controller.loan.LoanPayModifyController.updateModification(java.lang.Long,java.lang.Long,tiger.web.api.form.loan.LoanModificationForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61671 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanRefinementLimitDomain> tiger.web.api.controller.loan.LoanRefineController.getLoanRefinementLimit(long)
2016-11-17 12:59:29  [ main:61672 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanRefineController.refineLoan(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61672 ] - [ INFO ]  Mapped "{[/loan/{id}/refinement/payItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanRecordDomain>> tiger.web.api.controller.loan.LoanRefineController.previewLoanRefinePayItems(long,tiger.web.api.form.loan.LoanRefineForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61673 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.getLoanTemplateById(long)
2016-11-17 12:59:29  [ main:61673 ] - [ INFO ]  Mapped "{[/loan/template],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.LoanTemplateDomain> tiger.web.api.controller.loan.LoanTemplateController.createLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61673 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.deleteLoanTemplate(long)
2016-11-17 12:59:29  [ main:61674 ] - [ INFO ]  Mapped "{[/loan/template/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.loan.LoanTemplateController.updateLoanTemplate(tiger.web.api.form.loan.LoanTemplateForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:59:29  [ main:61674 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.loanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:59:29  [ main:61674 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.LoanTemplateDomain>> tiger.web.api.controller.loan.LoanTemplateController.allLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:59:29  [ main:61674 ] - [ INFO ]  Mapped "{[/loan/templates],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.loan.LoanTemplateController.countLoanTemplates(tiger.common.dal.query.LoanTemplateQuery)
2016-11-17 12:59:29  [ main:61676 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.awesomeProject(java.lang.Long)
2016-11-17 12:59:29  [ main:61680 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.collectProject(java.lang.Long)
2016-11-17 12:59:29  [ main:61712 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/awesome],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.market.MarketProjectActionController.deAwesomeProject(java.lang.Long)
2016-11-17 12:59:29  [ main:61712 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/collection],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectActionController.deCollectProject(java.lang.Long)
2016-11-17 12:59:29  [ main:61713 ] - [ INFO ]  Mapped "{[/market/project/{projectId}/sharing],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.market.MarketProjectActionController.shareProject()
2016-11-17 12:59:29  [ main:61715 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.getById(java.lang.Long,java.lang.Long)
2016-11-17 12:59:29  [ main:61715 ] - [ INFO ]  Mapped "{[/market/project],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.createMarketProject(tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61715 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.market.MarketProjectController.deleteProject(java.lang.Long)
2016-11-17 12:59:29  [ main:61715 ] - [ INFO ]  Mapped "{[/market/project/{projectId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.MarketProjectDomain> tiger.web.api.controller.market.MarketProjectController.updateProject(java.lang.Long,tiger.web.api.form.market.ProjectCreateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61717 ] - [ INFO ]  Mapped "{[/market/projects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.queryProjects(tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-17 12:59:29  [ main:61717 ] - [ INFO ]  Mapped "{[/market/projects/userCollection/{account}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getUserCollectedProjects(java.lang.Long,tiger.common.dal.query.MarketProjectQuery,java.lang.Long)
2016-11-17 12:59:29  [ main:61717 ] - [ INFO ]  Mapped "{[/market/topAccounts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.AccountDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getTopAccounts(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61718 ] - [ INFO ]  Mapped "{[/market/latestProjects],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.MarketProjectDomain>> tiger.web.api.controller.market.MarketProjectSearchController.getLatestProjects(tiger.common.dal.query.TopQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61724 ] - [ INFO ]  Mapped "{[/market/regions],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listAllRegions(tiger.common.dal.query.RegionQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61724 ] - [ INFO ]  Mapped "{[/market/region/support],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.market.RegionDomain>> tiger.web.api.controller.market.RegionController.listSupportedRegions()
2016-11-17 12:59:29  [ main:61724 ] - [ INFO ]  Mapped "{[/market/region/support/QRCode],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.market.RegionDomain> tiger.web.api.controller.market.RegionController.listSupportedRegionQRCodes(java.lang.String)
2016-11-17 12:59:29  [ main:61725 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.MessageDomain> tiger.web.api.controller.message.MessageController.getMessageById(java.lang.Long)
2016-11-17 12:59:29  [ main:61725 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatusById(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:59:29  [ main:61725 ] - [ INFO ]  Mapped "{[/message/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.deleteMessageById(java.lang.Long)
2016-11-17 12:59:29  [ main:61725 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.MessageDomain>> tiger.web.api.controller.message.MessageController.getPaginatedMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61725 ] - [ INFO ]  Mapped "{[/messages],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.message.MessageController.countObjectBaseResultMessages(tiger.common.dal.query.MessageQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61725 ] - [ INFO ]  Mapped "{[/messages],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.message.MessageController.updateMessageStatuses(tiger.web.api.form.message.MessageUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61726 ] - [ INFO ]  Mapped "{[/portal/ui],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.portal.PortalController.getPicture(java.lang.String)
2016-11-17 12:59:29  [ main:61727 ] - [ INFO ]  Mapped "{[/sms/verify],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendVerifyCode(tiger.web.api.form.sms.SmsVerifyForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61728 ] - [ INFO ]  Mapped "{[/sms],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.sms.SmsController.sendMsg(tiger.web.api.form.sms.SendSmsForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61728 ] - [ INFO ]  Mapped "{[/sms/templates],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getMsgTemplate()
2016-11-17 12:59:29  [ main:61728 ] - [ INFO ]  Mapped "{[/sms/history],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult tiger.web.api.controller.sms.SmsController.showHistory(tiger.common.dal.query.SmsQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61728 ] - [ INFO ]  Mapped "{[/sms/history/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.sendAgain(long)
2016-11-17 12:59:29  [ main:61728 ] - [ INFO ]  Mapped "{[/sms/scheduler],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List> tiger.web.api.controller.sms.SmsController.getallSheduler()
2016-11-17 12:59:29  [ main:61728 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.snedSheduler(java.lang.Long)
2016-11-17 12:59:29  [ main:61728 ] - [ INFO ]  Mapped "{[/sms/scheduler/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.sms.SmsController.deleteSheduler(java.lang.Long)
2016-11-17 12:59:29  [ main:61730 ] - [ INFO ]  Mapped "{[/ucenter/help],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.addHelp(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61730 ] - [ INFO ]  Mapped "{[/ucenter/commonHelps],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.commonHelps()
2016-11-17 12:59:29  [ main:61730 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.allHelps(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61730 ] - [ INFO ]  Mapped "{[/ucenter/helps],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.listHelps(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61731 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpDomain> tiger.web.api.controller.ucenter.HelpController.getHelpById(long)
2016-11-17 12:59:29  [ main:61731 ] - [ INFO ]  Mapped "{[/ucenter/catalogs],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpCatalogDomain>> tiger.web.api.controller.ucenter.HelpController.allCatalogs()
2016-11-17 12:59:29  [ main:61731 ] - [ INFO ]  Mapped "{[/ucenter/catalog/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterHelpCatalogDomain> tiger.web.api.controller.ucenter.HelpController.getCatalog(long)
2016-11-17 12:59:29  [ main:61731 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=help],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterHelpDomain>> tiger.web.api.controller.ucenter.HelpController.searchHelp(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61732 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.updateHelpById(tiger.web.api.form.ucenter.HelpForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:59:29  [ main:61732 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.deleteHelpById(long)
2016-11-17 12:59:29  [ main:61732 ] - [ INFO ]  Mapped "{[/ucenter/help/{id}/common],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.HelpController.commonHelpById(long,javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61734 ] - [ INFO ]  Mapped "{[/ucenter/post],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.addPost(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61734 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/reply],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.addReply(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,long)
2016-11-17 12:59:29  [ main:61735 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.allPosts()
2016-11-17 12:59:29  [ main:61735 ] - [ INFO ]  Mapped "{[/ucenter/stickyPosts],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.stickyPosts()
2016-11-17 12:59:29  [ main:61735 ] - [ INFO ]  Mapped "{[/ucenter/posts],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.listPosts(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61735 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostDomain> tiger.web.api.controller.ucenter.PostController.getPostById(java.lang.Long,java.lang.String)
2016-11-17 12:59:29  [ main:61735 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updatePostById(tiger.web.api.form.ucenter.PostForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:59:29  [ main:61735 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostById(long)
2016-11-17 12:59:29  [ main:61736 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=all],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.getAllReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-17 12:59:29  [ main:61736 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/replys],methods=[GET],params=[scope=list],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.listReplys(long,javax.servlet.http.HttpServletRequest,java.lang.String)
2016-11-17 12:59:29  [ main:61736 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.UcenterPostReplyDomain> tiger.web.api.controller.ucenter.PostController.getPostReplyById(long)
2016-11-17 12:59:29  [ main:61736 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.updateReplyById(tiger.web.api.form.ucenter.PostReplyForm,org.springframework.validation.BindingResult,long)
2016-11-17 12:59:29  [ main:61737 ] - [ INFO ]  Mapped "{[/ucenter/reply/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.deletePostReplyById(long)
2016-11-17 12:59:29  [ main:61737 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=post],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostDomain>> tiger.web.api.controller.ucenter.PostController.searchPost(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61737 ] - [ INFO ]  Mapped "{[/ucenter/search],methods=[GET],params=[scope=reply],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.UcenterPostReplyDomain>> tiger.web.api.controller.ucenter.PostController.searchReply(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61737 ] - [ INFO ]  Mapped "{[/ucenter/post/{id}/stick],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Object> tiger.web.api.controller.ucenter.PostController.stickPostById(long,javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61739 ] - [ INFO ]  Mapped "{[/workspace],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.createGroupWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61739 ] - [ INFO ]  Mapped "{[/workspace],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspace(tiger.web.api.form.workspace.WorkspaceForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61740 ] - [ INFO ]  Mapped "{[/workspace],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.deleteGroupWorkspace()
2016-11-17 12:59:29  [ main:61740 ] - [ INFO ]  Mapped "{[/workspace/transfer/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.transferGroupWorkspace(java.lang.Long)
2016-11-17 12:59:29  [ main:61740 ] - [ INFO ]  Mapped "{[/workspace/setting/loan],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.updateWorkspaceLoanSetting(tiger.web.api.form.workspace.WorkspaceLoanSettingForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61740 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceController.getWorkspace(java.lang.Long)
2016-11-17 12:59:29  [ main:61740 ] - [ INFO ]  Mapped "{[/workspace/{id}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.quitWorkspace(java.lang.Long)
2016-11-17 12:59:29  [ main:61740 ] - [ INFO ]  Mapped "{[/workspace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceController.checkCreateWorkspaceAbility()
2016-11-17 12:59:29  [ main:61741 ] - [ INFO ]  Mapped "{[/workspace/member/invitation],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.generateInvitation()
2016-11-17 12:59:29  [ main:61741 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/joinByCode],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<?> tiger.web.api.controller.workspace.WorkspaceMemberController.joinWorkspaceByInvitationCode(java.lang.String)
2016-11-17 12:59:29  [ main:61741 ] - [ INFO ]  Mapped "{[/workspace/member/invitation/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceInvitationDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getInvitationInfo(java.lang.String)
2016-11-17 12:59:29  [ main:61742 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.WorkspaceMemberDetailDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getWorkspaceMember(java.lang.Long)
2016-11-17 12:59:29  [ main:61742 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.addWorkspaceMember(java.lang.Long)
2016-11-17 12:59:29  [ main:61744 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.deleteWorkspaceMember(java.lang.Long)
2016-11-17 12:59:29  [ main:61745 ] - [ INFO ]  Mapped "{[/workspace/member/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<tiger.core.domain.workspace.AccountWorkspaceDomain> tiger.web.api.controller.workspace.WorkspaceMemberController.getUserAuthInWorkspace()
2016-11-17 12:59:29  [ main:61746 ] - [ INFO ]  Mapped "{[/workspace/member/{accountId}/role],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.updateWorkspaceRoles(java.lang.Long,tiger.web.api.form.workspace.WorkspaceRoleUpdateForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61746 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[scope=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationsOfWorkspace()
2016-11-17 12:59:29  [ main:61746 ] - [ INFO ]  Mapped "{[/workspace/member/verifications],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.PageResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberVerifyDomain>> tiger.web.api.controller.workspace.WorkspaceMemberController.getVerificationsOfWorkspace(tiger.common.dal.query.WorkspaceVerifyQuery,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61746 ] - [ INFO ]  Mapped "{[/workspace/member/verification],methods=[PUT],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Boolean> tiger.web.api.controller.workspace.WorkspaceMemberController.countVerificationOfWorkspace(tiger.web.api.form.workspace.WorkspaceVerifyForm,org.springframework.validation.BindingResult)
2016-11-17 12:59:29  [ main:61747 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceMemberListDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceMembers()
2016-11-17 12:59:29  [ main:61749 ] - [ INFO ]  Mapped "{[/workspace/members],methods=[GET],params=[operation=count],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.lang.Integer> tiger.web.api.controller.workspace.WorkspaceSearchController.countWorkspaceMembers()
2016-11-17 12:59:29  [ main:61750 ] - [ INFO ]  Mapped "{[/workspace/roles],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.common.dal.enums.RoleEnum>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaceRoles()
2016-11-17 12:59:29  [ main:61751 ] - [ INFO ]  Mapped "{[/workspaces],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public tiger.core.base.BaseResult<java.util.List<tiger.core.domain.workspace.WorkspaceDomain>> tiger.web.api.controller.workspace.WorkspaceSearchController.getWorkspaces()
2016-11-17 12:59:29  [ main:61774 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:29  [ main:61774 ] - [ INFO ]  Mapped "{[/error],methods=[],params=[],headers=[],consumes=[],produces=[text/html],custom=[]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest)
2016-11-17 12:59:30  [ main:62823 ] - [ INFO ]  Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2016-11-17 12:59:32  [ main:64311 ] - [ INFO ]  Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3754a4bf: startup date [Thu Nov 17 12:58:29 CST 2016]; root of context hierarchy
2016-11-17 12:59:36  [ main:68075 ] - [ INFO ]  Initializing EhCache CacheManager
2016-11-17 12:59:48  [ main:80705 ] - [ INFO ]  Mapped "{[/mappings],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80710 ] - [ INFO ]  Mapped "{[/metrics/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2016-11-17 12:59:48  [ main:80710 ] - [ INFO ]  Mapped "{[/metrics],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80710 ] - [ INFO ]  Mapped "{[/info],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80716 ] - [ INFO ]  Mapped "{[/shutdown],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2016-11-17 12:59:48  [ main:80716 ] - [ INFO ]  Mapped "{[/dump],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80716 ] - [ INFO ]  Mapped "{[/health],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2016-11-17 12:59:48  [ main:80717 ] - [ INFO ]  Mapped "{[/env/{name:.*}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2016-11-17 12:59:48  [ main:80717 ] - [ INFO ]  Mapped "{[/env],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80717 ] - [ INFO ]  Mapped "{[/autoconfig],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80717 ] - [ INFO ]  Mapped "{[/configprops],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80717 ] - [ INFO ]  Mapped "{[/trace],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:48  [ main:80718 ] - [ INFO ]  Mapped "{[/beans],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-11-17 12:59:49  [ main:81719 ] - [ INFO ]  

Using default security password: 75dab5ae-6de0-4c68-9b7a-8b147171fb94

2016-11-17 12:59:50  [ main:82255 ] - [ INFO ]  Creating filter chain: Ant [pattern='/css/**'], []
2016-11-17 12:59:50  [ main:82256 ] - [ INFO ]  Creating filter chain: Ant [pattern='/js/**'], []
2016-11-17 12:59:50  [ main:82256 ] - [ INFO ]  Creating filter chain: Ant [pattern='/images/**'], []
2016-11-17 12:59:50  [ main:82256 ] - [ INFO ]  Creating filter chain: Ant [pattern='/**/favicon.ico'], []
2016-11-17 12:59:50  [ main:82257 ] - [ INFO ]  Creating filter chain: Ant [pattern='/error'], []
2016-11-17 12:59:50  [ main:82903 ] - [ INFO ]  Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e1e5fb3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2bfc86e1, org.springframework.security.web.header.HeaderWriterFilter@67c46c9e, org.springframework.web.filter.CharacterEncodingFilter@4682e0cf, org.springframework.security.web.authentication.logout.LogoutFilter@73d6261d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@368d3918, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5737d839, tiger.web.api.SecurityConfig$SecurityContextAuthenticationFilter@54780d8c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22acafbc, org.springframework.security.web.session.SessionManagementFilter@76ccd41d, org.springframework.security.web.access.ExceptionTranslationFilter@3a7fe56]
2016-11-17 12:59:51  [ main:83442 ] - [ INFO ]  Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/info'], Ant [pattern='/info/**'], Ant [pattern='/info.*'], Ant [pattern='/health'], Ant [pattern='/health/**'], Ant [pattern='/health.*'], Ant [pattern='/mappings'], Ant [pattern='/mappings/**'], Ant [pattern='/mappings.*'], Ant [pattern='/metrics'], Ant [pattern='/metrics/**'], Ant [pattern='/metrics.*'], Ant [pattern='/shutdown'], Ant [pattern='/shutdown/**'], Ant [pattern='/shutdown.*'], Ant [pattern='/dump'], Ant [pattern='/dump/**'], Ant [pattern='/dump.*'], Ant [pattern='/env'], Ant [pattern='/env/**'], Ant [pattern='/env.*'], Ant [pattern='/autoconfig'], Ant [pattern='/autoconfig/**'], Ant [pattern='/autoconfig.*'], Ant [pattern='/configprops'], Ant [pattern='/configprops/**'], Ant [pattern='/configprops.*'], Ant [pattern='/trace'], Ant [pattern='/trace/**'], Ant [pattern='/trace.*'], Ant [pattern='/beans'], Ant [pattern='/beans/**'], Ant [pattern='/beans.*']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12a69516, org.springframework.security.web.context.SecurityContextPersistenceFilter@75b8a37e, org.springframework.security.web.header.HeaderWriterFilter@52e9e960, org.springframework.security.web.authentication.logout.LogoutFilter@7e46efa, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@67560fb1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33b8648a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e872974, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54970d40, org.springframework.security.web.session.SessionManagementFilter@68082846, org.springframework.security.web.access.ExceptionTranslationFilter@138efcc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6262d7d2]
2016-11-17 13:00:08  [ main:100079 ] - [ INFO ]  ClassTemplateLoader for Spring macros added to FreeMarker configuration
2016-11-17 13:00:18  [ main:110031 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-17 13:00:18  [ main:110114 ] - [ INFO ]  Registering beans for JMX exposure on startup
2016-11-17 13:00:18  [ main:110154 ] - [ INFO ]  Starting beans in phase 0
2016-11-17 13:00:18  [ main:110160 ] - [ INFO ]  Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2016-11-17 13:00:18  [ main:110211 ] - [ INFO ]  Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2016-11-17 13:00:18  [ main:110219 ] - [ INFO ]  Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2016-11-17 13:00:18  [ main:110290 ] - [ INFO ]  Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2016-11-17 13:00:18  [ main:110322 ] - [ INFO ]  Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2016-11-17 13:00:18  [ main:110333 ] - [ INFO ]  Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2016-11-17 13:00:18  [ main:110338 ] - [ INFO ]  Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2016-11-17 13:00:18  [ main:110344 ] - [ INFO ]  Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2016-11-17 13:00:18  [ main:110412 ] - [ INFO ]  Located managed bean 'autoConfigurationAuditEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationAuditEndpoint]
2016-11-17 13:00:18  [ main:110425 ] - [ INFO ]  Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2016-11-17 13:00:18  [ main:110437 ] - [ INFO ]  Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2016-11-17 13:00:18  [ main:110809 ] - [ INFO ]  Began transaction (1) for test context [DefaultTestContext@7fcc37d6 testClass = AccountControllerTests, testInstance = tiger.web.api.account.AccountControllerTests@2bce1593, testMethod = testSignUp@AccountControllerTests, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@1e1addc testClass = AccountControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@155c5cc0]; rollback [true]
2016-11-17 13:00:18  [ main:110813 ] - [ INFO ]  测试启动
2016-11-17 13:00:18  [ main:110824 ] - [ INFO ]  Initializing Spring FrameworkServlet ''
2016-11-17 13:00:18  [ main:110824 ] - [ INFO ]  FrameworkServlet '': initialization started
2016-11-17 13:00:19  [ main:111266 ] - [ INFO ]  FrameworkServlet '': initialization completed in 442 ms
2016-11-17 13:03:58  [ main:330232 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_
2016-11-17 13:03:58  [ main:330241 ] - [ ERROR ]  获取缓存数据失败, key=login_log_id_
2016-11-17 13:03:58  [ main:330277 ] - [ ERROR ]  获取缓存数据失败, key=account_auth_domain_0
2016-11-17 13:03:58  [ main:330307 ] - [ INFO ]  测试关闭
2016-11-17 13:03:58  [ main:330363 ] - [ INFO ]  Rolled back transaction for test context [DefaultTestContext@7fcc37d6 testClass = AccountControllerTests, testInstance = tiger.web.api.account.AccountControllerTests@2bce1593, testMethod = testSignUp@AccountControllerTests, testException = com.jayway.jsonpath.PathNotFoundException: Property ['id'] not found in path $['data'], mergedContextConfiguration = [WebMergedContextConfiguration@1e1addc testClass = AccountControllerTests, locations = '{}', classes = '{class tiger.web.api.IntegrationTestsConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
2016-11-17 13:03:58  [ Thread-9:330403 ] - [ INFO ]  Closing org.springframework.web.context.support.GenericWebApplicationContext@3754a4bf: startup date [Thu Nov 17 12:58:29 CST 2016]; root of context hierarchy
2016-11-17 13:03:58  [ Thread-9:330422 ] - [ INFO ]  Stopping beans in phase 0
2016-11-17 13:03:58  [ Thread-9:330434 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-17 13:03:58  [ Thread-9:330435 ] - [ INFO ]  Unregistering JMX-exposed beans
2016-11-17 13:03:58  [ Thread-9:330437 ] - [ INFO ]  Unregistering JMX-exposed beans on shutdown
2016-11-17 13:03:58  [ Thread-9:330445 ] - [ INFO ]  Shutting down EhCache CacheManager
2016-11-17 13:03:58  [ Thread-9:330492 ] - [ INFO ]  Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
2016-11-17 13:03:58  [ Thread-9:330503 ] - [ INFO ]  Closing JPA EntityManagerFactory for persistence unit 'default'
2016-11-17 13:25:06  [ main:0 ] - [ INFO ]  Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2016-11-17 13:25:06  [ main:71 ] - [ INFO ]  Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@564fabc8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@16d04d3d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@49ec71f8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1d2adfbe, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@36902638]
2016-11-17 13:25:07  [ main:828 ] - [ INFO ]  Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3754a4bf: startup date [Thu Nov 17 13:25:07 CST 2016]; root of context hierarchy
2016-11-17 13:25:16  [ main:9956 ] - [ INFO ]  Overriding bean definition for bean 'cacheManager': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/AppConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=cacheManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [tiger/web/api/ShiroConfig.class]]
2016-11-17 13:25:19  [ main:12286 ] - [ INFO ]  Bean 'shiroConfig' of type [class tiger.web.api.ShiroConfig$$EnhancerBySpringCGLIB$$51de8a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:19  [ main:12548 ] - [ INFO ]  HV000001: Hibernate Validator 5.1.3.Final
2016-11-17 13:25:19  [ main:12978 ] - [ INFO ]  Bean 'org.springframework.scheduling.annotation.SchedulingConfiguration' of type [class org.springframework.scheduling.annotation.SchedulingConfiguration$$EnhancerBySpringCGLIB$$92aa9c26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:21  [ main:14818 ] - [ INFO ]  Bean 'cacheManager' of type [class org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:21  [ main:14824 ] - [ INFO ]  Cache with name 'tiger.web.api.ShiroRealm.authorizationCache' does not yet exist.  Creating now.
2016-11-17 13:25:21  [ main:14866 ] - [ INFO ]  Added EhCache named [tiger.web.api.ShiroRealm.authorizationCache]
2016-11-17 13:25:21  [ main:14913 ] - [ INFO ]  Bean 'myRealm' of type [class tiger.web.api.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:21  [ main:14990 ] - [ INFO ]  Bean 'securityManager' of type [class org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:21  [ main:15096 ] - [ INFO ]  Bean 'dataConfig' of type [class tiger.common.dal.DataConfig$$EnhancerBySpringCGLIB$$7875a6af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:22  [ main:15219 ] - [ INFO ]  MLog clients using log4j logging.
2016-11-17 13:25:22  [ main:15519 ] - [ INFO ]  Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
2016-11-17 13:25:22  [ main:15812 ] - [ INFO ]  Bean 'dataSource' of type [class com.mchange.v2.c3p0.ComboPooledDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:23  [ main:17037 ] - [ INFO ]  Bean 'sqlSessionFactory' of type [class org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:24  [ main:17760 ] - [ INFO ]  Bean 'workspaceVerifyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:24  [ main:17974 ] - [ INFO ]  Bean 'workspaceMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:24  [ main:18050 ] - [ INFO ]  Bean 'ucenterPostReplyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18188 ] - [ INFO ]  Bean 'ucenterPostMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18310 ] - [ INFO ]  Bean 'ucenterHelpMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18381 ] - [ INFO ]  Bean 'ucenterHelpCatalogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18431 ] - [ INFO ]  Bean 'tagMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18576 ] - [ INFO ]  Bean 'systemParamsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18640 ] - [ INFO ]  Bean 'statisticsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18693 ] - [ INFO ]  Bean 'staffMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18803 ] - [ INFO ]  Bean 'smsVerifyCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18844 ] - [ INFO ]  Bean 'roleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:18951 ] - [ INFO ]  Bean 'regionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:19044 ] - [ INFO ]  Bean 'portalUIMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:25  [ main:19078 ] - [ INFO ]  Bean 'permissionMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19188 ] - [ INFO ]  Bean 'paymentRefundMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19277 ] - [ INFO ]  Bean 'paymentOrderObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19356 ] - [ INFO ]  Bean 'paymentOrderMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19425 ] - [ INFO ]  Bean 'paymentObjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19520 ] - [ INFO ]  Bean 'msgTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19572 ] - [ INFO ]  Bean 'msgTplCatgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19681 ] - [ INFO ]  Bean 'messageMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19809 ] - [ INFO ]  Bean 'marketProjectMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19915 ] - [ INFO ]  Bean 'loanTplMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:19998 ] - [ INFO ]  Bean 'loanSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:26  [ main:20113 ] - [ INFO ]  Bean 'loanRefineMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20298 ] - [ INFO ]  Bean 'loanRecordMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20374 ] - [ INFO ]  Bean 'loanRecordItemsMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20451 ] - [ INFO ]  Bean 'loanPawnParamMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20552 ] - [ INFO ]  Bean 'loanPawnMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20673 ] - [ INFO ]  Bean 'loanMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20759 ] - [ INFO ]  Bean 'loanCustomerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20836 ] - [ INFO ]  Bean 'invitationCodeMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20934 ] - [ INFO ]  Bean 'feedbackMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:20986 ] - [ INFO ]  Bean 'customerMsgScheduleMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:27  [ main:21086 ] - [ INFO ]  Bean 'customerMsgMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21158 ] - [ INFO ]  Bean 'customerMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21199 ] - [ INFO ]  Bean 'companyMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21252 ] - [ INFO ]  Bean 'attachRelateMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21306 ] - [ INFO ]  Bean 'attachMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21377 ] - [ INFO ]  Bean 'activityMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21418 ] - [ INFO ]  Bean 'accountSettingMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21491 ] - [ INFO ]  Bean 'accountMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21550 ] - [ INFO ]  Bean 'accountLoginLogMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21601 ] - [ INFO ]  Bean 'accountBindMapper' of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-11-17 13:25:28  [ main:21997 ] - [ INFO ]  Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2255190b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
